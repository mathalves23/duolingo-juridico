# Generated by Django 4.2.7 on 2025-06-09 08:44

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StudyPath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('target_exam', models.CharField(max_length=200)),
                ('estimated_weeks', models.PositiveIntegerField()),
                ('difficulty_level', models.IntegerField(choices=[(1, 'Básico - Letra da Lei'), (2, 'Intermediário - Interpretação'), (3, 'Avançado - Doutrina'), (4, 'Expert - Questões de Concurso'), (5, 'Master - Jurisprudência e Casos')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('is_public', models.BooleanField(default=True)),
                ('is_premium', models.BooleanField(default=False)),
                ('enrollment_count', models.PositiveIntegerField(default=0)),
                ('completion_rate', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_paths', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Trilha de Estudo',
                'verbose_name_plural': 'Trilhas de Estudo',
                'ordering': ['-enrollment_count', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('category', models.CharField(choices=[('law', 'Direito'), ('language', 'Língua Portuguesa'), ('math', 'Matemática e Raciocínio Lógico'), ('technology', 'Informática'), ('administration', 'Administração Pública'), ('general', 'Conhecimentos Gerais'), ('specific', 'Conhecimentos Específicos')], max_length=20)),
                ('description', models.TextField()),
                ('icon', models.ImageField(blank=True, null=True, upload_to='subjects/icons/')),
                ('color_hex', models.CharField(default='#4285F4', max_length=7)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_premium', models.BooleanField(default=False)),
                ('total_lessons', models.PositiveIntegerField(default=0)),
                ('estimated_hours', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Disciplina',
                'verbose_name_plural': 'Disciplinas',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_premium', models.BooleanField(default=False)),
                ('requires_previous_completion', models.BooleanField(default=True)),
                ('total_lessons', models.PositiveIntegerField(default=0)),
                ('estimated_minutes', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subtopics', to='courses.topic')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='courses.subject')),
            ],
            options={
                'verbose_name': 'Tópico',
                'verbose_name_plural': 'Tópicos',
                'ordering': ['subject', 'order', 'name'],
                'unique_together': {('subject', 'name')},
            },
        ),
        migrations.CreateModel(
            name='StudyPathSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('weight', models.FloatField(default=1.0)),
                ('estimated_hours', models.PositiveIntegerField()),
                ('study_path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.studypath')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.subject')),
            ],
            options={
                'verbose_name': 'Disciplina da Trilha',
                'verbose_name_plural': 'Disciplinas das Trilhas',
                'ordering': ['order', 'subject__name'],
                'unique_together': {('study_path', 'subject')},
            },
        ),
        migrations.AddField(
            model_name='studypath',
            name='subjects',
            field=models.ManyToManyField(through='courses.StudyPathSubject', to='courses.subject'),
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('lesson_type', models.CharField(choices=[('theory', 'Teoria'), ('practice', 'Prática'), ('review', 'Revisão'), ('test', 'Teste'), ('challenge', 'Desafio')], max_length=20)),
                ('difficulty_level', models.IntegerField(choices=[(1, 'Básico - Letra da Lei'), (2, 'Intermediário - Interpretação'), (3, 'Avançado - Doutrina'), (4, 'Expert - Questões de Concurso'), (5, 'Master - Jurisprudência e Casos')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('content', models.TextField()),
                ('legal_references', models.JSONField(default=list)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_premium', models.BooleanField(default=False)),
                ('xp_reward', models.PositiveIntegerField(default=10)),
                ('coin_reward', models.PositiveIntegerField(default=5)),
                ('estimated_minutes', models.PositiveIntegerField(default=5)),
                ('completion_count', models.PositiveIntegerField(default=0)),
                ('average_score', models.FloatField(default=0.0)),
                ('content_version', models.CharField(default='1.0', max_length=20)),
                ('last_legal_update', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='courses.topic')),
            ],
            options={
                'verbose_name': 'Lição',
                'verbose_name_plural': 'Lições',
                'ordering': ['topic', 'order', 'title'],
                'unique_together': {('topic', 'title')},
            },
        ),
        migrations.CreateModel(
            name='UserStudyPath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled_at', models.DateTimeField(auto_now_add=True)),
                ('target_completion_date', models.DateField()),
                ('progress_percentage', models.FloatField(default=0.0)),
                ('completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('current_subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='courses.subject')),
                ('study_path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='courses.studypath')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='study_paths', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Matrícula em Trilha',
                'verbose_name_plural': 'Matrículas em Trilhas',
                'ordering': ['-enrolled_at'],
                'unique_together': {('user', 'study_path')},
            },
        ),
        migrations.CreateModel(
            name='UserLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('score', models.FloatField(default=0.0)),
                ('attempts', models.PositiveIntegerField(default=0)),
                ('time_spent', models.PositiveIntegerField(default=0)),
                ('xp_earned', models.PositiveIntegerField(default=0)),
                ('coins_earned', models.PositiveIntegerField(default=0)),
                ('next_review_date', models.DateTimeField(blank=True, null=True)),
                ('review_interval_days', models.PositiveIntegerField(default=1)),
                ('ease_factor', models.FloatField(default=2.5)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_lessons', to='courses.lesson')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_lessons', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Progresso da Lição',
                'verbose_name_plural': 'Progressos das Lições',
                'ordering': ['-completed_at'],
                'unique_together': {('user', 'lesson')},
            },
        ),
        migrations.CreateModel(
            name='LegalContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('content_type', models.CharField(choices=[('law', 'Lei'), ('decree', 'Decreto'), ('regulation', 'Regulamento'), ('jurisprudence', 'Jurisprudência'), ('doctrine', 'Doutrina'), ('summary', 'Súmula')], max_length=20)),
                ('official_number', models.CharField(blank=True, max_length=100)),
                ('publication_date', models.DateField(blank=True, null=True)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('full_text', models.TextField()),
                ('summary', models.TextField(blank=True)),
                ('source_url', models.URLField(blank=True)),
                ('version', models.CharField(default='1.0', max_length=20)),
                ('is_current', models.BooleanField(default=True)),
                ('last_checked', models.DateTimeField(auto_now=True)),
                ('auto_update', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('replaced_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replaces', to='courses.legalcontent')),
                ('subjects', models.ManyToManyField(related_name='legal_contents', to='courses.subject')),
            ],
            options={
                'verbose_name': 'Conteúdo Jurídico',
                'verbose_name_plural': 'Conteúdos Jurídicos',
                'ordering': ['-publication_date', 'title'],
                'indexes': [models.Index(fields=['content_type', 'is_current'], name='courses_leg_content_4b2952_idx'), models.Index(fields=['official_number'], name='courses_leg_officia_8faa89_idx')],
            },
        ),
    ]
