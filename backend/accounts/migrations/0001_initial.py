# Generated by Django 4.2.7 on 2025-06-09 08:44

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('total_xp', models.PositiveIntegerField(default=0)),
                ('current_level', models.PositiveIntegerField(default=1)),
                ('coins', models.PositiveIntegerField(default=0)),
                ('gems', models.PositiveIntegerField(default=5)),
                ('current_streak', models.PositiveIntegerField(default=0)),
                ('longest_streak', models.PositiveIntegerField(default=0)),
                ('last_study_date', models.DateField(blank=True, null=True)),
                ('subscription_type', models.CharField(choices=[('free', 'Gratuito'), ('premium', 'Premium'), ('premium_plus', 'Premium Plus')], default='free', max_length=20)),
                ('subscription_expires', models.DateTimeField(blank=True, null=True)),
                ('daily_goal', models.PositiveIntegerField(default=50)),
                ('reminder_time', models.TimeField(blank=True, null=True)),
                ('study_days', models.JSONField(default=list)),
                ('agreed_to_terms', models.BooleanField(default=False)),
                ('agreed_to_lgpd', models.BooleanField(default=False)),
                ('marketing_emails', models.BooleanField(default=False)),
                ('data_processing_consent', models.BooleanField(default=False)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('target_exam', models.CharField(blank=True, max_length=200)),
                ('total_study_time', models.PositiveIntegerField(default=0)),
                ('total_questions_answered', models.PositiveIntegerField(default=0)),
                ('correct_answers', models.PositiveIntegerField(default=0)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_users', related_query_name='custom_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_users', related_query_name='custom_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'ordering': ['-total_xp'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encrypted_cpf', models.TextField(blank=True, null=True)),
                ('encrypted_phone', models.TextField(blank=True, null=True)),
                ('favorite_subjects', models.JSONField(default=list)),
                ('weak_subjects', models.JSONField(default=list)),
                ('study_goals', models.JSONField(default=dict)),
                ('push_notifications', models.BooleanField(default=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('streak_reminders', models.BooleanField(default=True)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('login_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='accounts.user')),
            ],
            options={
                'verbose_name': 'Perfil do Usuário',
                'verbose_name_plural': 'Perfis dos Usuários',
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('lesson_completed', 'Lição Concluída'), ('quiz_completed', 'Quiz Concluído'), ('level_up', 'Subiu de Nível'), ('streak_updated', 'Streak Atualizado'), ('purchase', 'Compra'), ('subscription', 'Assinatura'), ('data_export', 'Exportação de Dados'), ('data_deletion', 'Exclusão de Dados')], max_length=20)),
                ('description', models.TextField()),
                ('metadata', models.JSONField(default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='accounts.user')),
            ],
            options={
                'verbose_name': 'Atividade do Usuário',
                'verbose_name_plural': 'Atividades dos Usuários',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'activity_type'], name='accounts_us_user_id_64ef8c_idx'), models.Index(fields=['created_at'], name='accounts_us_created_4de55c_idx')],
            },
        ),
        migrations.CreateModel(
            name='LGPDConsent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consent_type', models.CharField(choices=[('terms', 'Termos de Uso'), ('privacy', 'Política de Privacidade'), ('marketing', 'Marketing'), ('data_processing', 'Processamento de Dados'), ('cookies', 'Cookies')], max_length=20)),
                ('granted', models.BooleanField()),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('terms_version', models.CharField(default='1.0', max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lgpd_consents', to='accounts.user')),
            ],
            options={
                'verbose_name': 'Consentimento LGPD',
                'verbose_name_plural': 'Consentimentos LGPD',
                'ordering': ['-granted_at'],
                'unique_together': {('user', 'consent_type', 'terms_version')},
            },
        ),
    ]
