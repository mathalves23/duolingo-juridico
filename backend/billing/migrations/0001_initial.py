# Generated by Django 4.2.7 on 2025-06-11 13:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='BRL', max_length=3)),
                ('payment_method', models.CharField(choices=[('credit_card', 'Cartão de Crédito'), ('debit_card', 'Cartão de Débito'), ('pix', 'PIX'), ('boleto', 'Boleto'), ('paypal', 'PayPal'), ('bank_transfer', 'Transferência Bancária')], max_length=20)),
                ('installments', models.PositiveIntegerField(default=1)),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('processing', 'Processando'), ('completed', 'Completo'), ('failed', 'Falhou'), ('cancelled', 'Cancelado'), ('refunded', 'Estornado'), ('partially_refunded', 'Parcialmente Estornado')], default='pending', max_length=20)),
                ('external_payment_id', models.CharField(blank=True, max_length=255)),
                ('external_customer_id', models.CharField(blank=True, max_length=255)),
                ('payment_data', models.JSONField(default=dict)),
                ('webhook_data', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Pagamento',
                'verbose_name_plural': 'Pagamentos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('stripe', 'Stripe'), ('pagarme', 'PagarMe'), ('mercadopago', 'Mercado Pago'), ('pagseguro', 'PagSeguro'), ('picpay', 'PicPay')], max_length=50, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('api_key', models.TextField(blank=True)),
                ('secret_key', models.TextField(blank=True)),
                ('webhook_url', models.URLField(blank=True)),
                ('supports_pix', models.BooleanField(default=False)),
                ('supports_boleto', models.BooleanField(default=False)),
                ('supports_credit_card', models.BooleanField(default=True)),
                ('supports_installments', models.BooleanField(default=False)),
                ('max_installments', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Provedor de Pagamento',
                'verbose_name_plural': 'Provedores de Pagamento',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('plan_type', models.CharField(choices=[('free', 'Gratuito'), ('basic', 'Básico'), ('premium', 'Premium'), ('premium_plus', 'Premium Plus'), ('enterprise', 'Empresarial')], max_length=20)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('original_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('billing_cycle', models.CharField(choices=[('monthly', 'Mensal'), ('quarterly', 'Trimestral'), ('semiannual', 'Semestral'), ('annual', 'Anual'), ('lifetime', 'Vitalício')], max_length=20)),
                ('max_questions_per_day', models.PositiveIntegerField(blank=True, null=True)),
                ('max_simulations_per_month', models.PositiveIntegerField(blank=True, null=True)),
                ('has_ai_explanations', models.BooleanField(default=False)),
                ('has_study_plans', models.BooleanField(default=False)),
                ('has_progress_analytics', models.BooleanField(default=False)),
                ('has_offline_access', models.BooleanField(default=False)),
                ('has_priority_support', models.BooleanField(default=False)),
                ('has_custom_reminders', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('has_trial', models.BooleanField(default=False)),
                ('trial_days', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Plano de Assinatura',
                'verbose_name_plural': 'Planos de Assinatura',
                'ordering': ['sort_order', 'price'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('trial', 'Período de Teste'), ('active', 'Ativa'), ('past_due', 'Em Atraso'), ('cancelled', 'Cancelada'), ('expired', 'Expirada'), ('suspended', 'Suspensa')], default='trial', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('trial_ends_at', models.DateTimeField(blank=True, null=True)),
                ('current_period_start', models.DateTimeField()),
                ('current_period_end', models.DateTimeField()),
                ('ends_at', models.DateTimeField(blank=True, null=True)),
                ('next_billing_date', models.DateTimeField(blank=True, null=True)),
                ('auto_renew', models.BooleanField(default=True)),
                ('cancel_at_period_end', models.BooleanField(default=False)),
                ('external_subscription_id', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='active_subscription', to='billing.payment')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.subscriptionplan')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Assinatura',
                'verbose_name_plural': 'Assinaturas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='payment',
            name='plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.subscriptionplan'),
        ),
        migrations.AddField(
            model_name='payment',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.paymentprovider'),
        ),
        migrations.AddField(
            model_name='payment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=200)),
                ('discount_type', models.CharField(choices=[('percentage', 'Porcentagem'), ('fixed', 'Valor Fixo'), ('free_trial', 'Teste Grátis')], max_length=20)),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('max_uses', models.PositiveIntegerField(blank=True, null=True)),
                ('max_uses_per_user', models.PositiveIntegerField(default=1)),
                ('min_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('valid_from', models.DateTimeField()),
                ('valid_until', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('times_used', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('applicable_plans', models.ManyToManyField(blank=True, to='billing.subscriptionplan')),
            ],
            options={
                'verbose_name': 'Cupom de Desconto',
                'verbose_name_plural': 'Cupons de Desconto',
            },
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['user', 'status'], name='billing_pay_user_id_562e66_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['external_payment_id'], name='billing_pay_externa_c262d0_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['created_at'], name='billing_pay_created_a6e2cd_idx'),
        ),
    ]
