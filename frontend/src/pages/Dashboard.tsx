import React, { useState, useEffect } from 'react';
import { useAuth } from '../contexts/AuthContext';
import {
  TrophyIcon,
  FireIcon,
  CurrencyDollarIcon,
  ChartBarIcon,
  BookOpenIcon,
  QuestionMarkCircleIcon,
  ClockIcon,
  SparklesIcon,
  StarIcon,
  CalendarDaysIcon,
  AcademicCapIcon,
  ArrowTrendingUpIcon,
  BoltIcon,
  PlayIcon,
  EyeIcon,
  RocketLaunchIcon,
  LightBulbIcon,
  ShieldCheckIcon,
  GiftIcon,
  BeakerIcon,
  UserGroupIcon,
  DocumentTextIcon,
  ChevronRightIcon,
  PlusIcon,
  ArrowUpIcon,
  CheckCircleIcon,
  ExclamationTriangleIcon
} from '@heroicons/react/24/outline';
import {
  TrophyIcon as TrophySolid,
  FireIcon as FireSolid,
  StarIcon as StarSolid,
  HeartIcon as HeartSolid,
  BoltIcon as BoltSolid,
  CheckCircleIcon as CheckSolid
} from '@heroicons/react/24/solid';

interface DashboardStats {
  xp_points: number;
  coins: number;
  current_streak: number;
  best_streak: number;
  total_study_time: number;
  questions_answered: number;
  correct_answers: number;
  subjects_studied: number;
  achievements_earned: number;
  level: number;
  hearts: number;
}

interface RecentActivity {
  id: number;
  type: 'question' | 'lesson' | 'achievement' | 'quiz' | 'streak';
  title: string;
  description: string;
  timestamp: string;
  xp_earned?: number;
  icon: React.ComponentType<any>;
  color: string;
  isSolid?: boolean;
}

interface DailyGoal {
  id: string;
  type: string;
  current: number;
  target: number;
  icon: React.ComponentType<any>;
  color: string;
  unit: string;
}

interface StudyStreak {
  day: string;
  completed: boolean;
  xp: number;
  date: string;
}

interface Subject {
  id: string;
  name: string;
  progress: number;
  totalLessons: number;
  completedLessons: number;
  color: string;
  icon: React.ComponentType<any>;
  nextLesson: string;
}

const Dashboard: React.FC = () => {
  const { user } = useAuth();
  const [stats, setStats] = useState<DashboardStats | null>(null);
  const [recentActivities, setRecentActivities] = useState<RecentActivity[]>([]);
  const [dailyGoals, setDailyGoals] = useState<DailyGoal[]>([]);
  const [studyStreak, setStudyStreak] = useState<StudyStreak[]>([]);
  const [subjects, setSubjects] = useState<Subject[]>([]);
  const [loading, setLoading] = useState(true);
  const [currentTime, setCurrentTime] = useState(new Date());
  const [motivationalQuote, setMotivationalQuote] = useState('');

  // Mock data - em produção, viria da API
  useEffect(() => {
    const mockStats: DashboardStats = {
      xp_points: user?.profile?.xp_points || 2850,
      coins: user?.profile?.coins || 540,
      current_streak: user?.profile?.current_streak || 12,
      best_streak: user?.profile?.best_streak || 28,
      total_study_time: user?.profile?.total_study_time || 4320, // em minutos
      questions_answered: 287,
      correct_answers: 231,
      subjects_studied: 7,
      achievements_earned: 15,
      level: Math.floor((user?.profile?.xp_points || 2850) / 1000) + 1,
      hearts: 5\n    };\n\n    const mockActivities: RecentActivity[] = [\n      {\n        id: 1,\n        type: 'achievement',\n        title: 'Mestre da Consistência! 🏆',\n        description: 'Manteve uma sequência de 12 dias consecutivos',\n        timestamp: '2024-01-15T10:30:00Z',\n        xp_earned: 150,\n        icon: TrophySolid,\n        color: 'from-gold-500 to-gold-600',\n        isSolid: true\n      },\n      {\n        id: 2,\n        type: 'quiz',\n        title: 'Simulado Direito Constitucional 📚',\n        description: 'Pontuou 92% no simulado de 30 questões',\n        timestamp: '2024-01-15T09:15:00Z',\n        xp_earned: 120,\n        icon: AcademicCapIcon,\n        color: 'from-primary-500 to-navy-600'\n      },\n      {\n        id: 3,\n        type: 'lesson',\n        title: 'Direitos Fundamentais Avançado 🎯',\n        description: 'Completou módulo sobre garantias constitucionais',\n        timestamp: '2024-01-14T16:45:00Z',\n        xp_earned: 85,\n        icon: BookOpenIcon,\n        color: 'from-legal-500 to-legal-600'\n      },\n      {\n        id: 4,\n        type: 'streak',\n        title: 'Sequência Perfeita! ⚡',\n        description: 'Acertou 15 questões consecutivas',\n        timestamp: '2024-01-14T14:20:00Z',\n        xp_earned: 75,\n        icon: BoltSolid,\n        color: 'from-warning-500 to-warning-600',\n        isSolid: true\n      },\n      {\n        id: 5,\n        type: 'question',\n        title: 'Especialista em Processo Civil 📖',\n        description: 'Respondeu 50 questões de processo civil',\n        timestamp: '2024-01-13T11:30:00Z',\n        xp_earned: 100,\n        icon: CheckSolid,\n        color: 'from-success-500 to-success-600',\n        isSolid: true\n      }\n    ];\n\n    const mockDailyGoals: DailyGoal[] = [\n      {\n        id: 'questions',\n        type: 'Questões Respondidas',\n        current: 18,\n        target: 25,\n        icon: QuestionMarkCircleIcon,\n        color: 'from-primary-500 to-primary-600',\n        unit: 'questões'\n      },\n      {\n        id: 'time',\n        type: 'Tempo de Estudo',\n        current: 75,\n        target: 90,\n        icon: ClockIcon,\n        color: 'from-success-500 to-success-600',\n        unit: 'minutos'\n      },\n      {\n        id: 'xp',\n        type: 'XP Conquistado',\n        current: 280,\n        target: 350,\n        icon: TrophyIcon,\n        color: 'from-gold-500 to-gold-600',\n        unit: 'XP'\n      },\n      {\n        id: 'lessons',\n        type: 'Lições Concluídas',\n        current: 3,\n        target: 5,\n        icon: BookOpenIcon,\n        color: 'from-purple-500 to-purple-600',\n        unit: 'lições'\n      }\n    ];\n\n    const mockStudyStreak: StudyStreak[] = [\n      { day: 'Seg', completed: true, xp: 250, date: '2024-01-08' },\n      { day: 'Ter', completed: true, xp: 180, date: '2024-01-09' },\n      { day: 'Qua', completed: true, xp: 320, date: '2024-01-10' },\n      { day: 'Qui', completed: true, xp: 290, date: '2024-01-11' },\n      { day: 'Sex', completed: true, xp: 410, date: '2024-01-12' },\n      { day: 'Sáb', completed: true, xp: 380, date: '2024-01-13' },\n      { day: 'Dom', completed: false, xp: 0, date: '2024-01-14' }\n    ];\n\n    const mockSubjects: Subject[] = [\n      {\n        id: 'constitutional',\n        name: 'Direito Constitucional',\n        progress: 75,\n        totalLessons: 20,\n        completedLessons: 15,\n        color: 'from-primary-500 to-primary-600',\n        icon: ShieldCheckIcon,\n        nextLesson: 'Controle de Constitucionalidade'\n      },\n      {\n        id: 'administrative',\n        name: 'Direito Administrativo',\n        progress: 60,\n        totalLessons: 18,\n        completedLessons: 11,\n        color: 'from-legal-500 to-legal-600',\n        icon: DocumentTextIcon,\n        nextLesson: 'Licitações e Contratos'\n      },\n      {\n        id: 'civil',\n        name: 'Direito Civil',\n        progress: 45,\n        totalLessons: 25,\n        completedLessons: 11,\n        color: 'from-purple-500 to-purple-600',\n        icon: UserGroupIcon,\n        nextLesson: 'Direitos Reais'\n      },\n      {\n        id: 'portuguese',\n        name: 'Língua Portuguesa',\n        progress: 80,\n        totalLessons: 15,\n        completedLessons: 12,\n        color: 'from-cyan-500 to-cyan-600',\n        icon: BookOpenIcon,\n        nextLesson: 'Concordância Verbal'\n      }\n    ];\n\n    const quotes = [\n      'A persistência é o caminho do êxito. 💪',\n      'Cada questão respondida é um passo mais próximo da aprovação! 🎯',\n      'O sucesso é a soma de pequenos esforços repetidos dia após dia. ⭐',\n      'Você está mais forte do que ontem! 🚀',\n      'A disciplina é a ponte entre objetivos e conquistas. 🌟'\n    ];\n\n    setStats(mockStats);\n    setRecentActivities(mockActivities);\n    setDailyGoals(mockDailyGoals);\n    setStudyStreak(mockStudyStreak);\n    setSubjects(mockSubjects);\n    setMotivationalQuote(quotes[Math.floor(Math.random() * quotes.length)]);\n    setLoading(false);\n  }, [user]);\n\n  // Atualizar horário em tempo real\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  const formatTime = (minutes: number) => {\n    const hours = Math.floor(minutes / 60);\n    const mins = minutes % 60;\n    return `${hours}h ${mins}m`;\n  };\n\n  const getAccuracyPercentage = () => {\n    if (!stats || stats.questions_answered === 0) return 0;\n    return Math.round((stats.correct_answers / stats.questions_answered) * 100);\n  };\n\n  const getTimeAgo = (timestamp: string) => {\n    const now = new Date();\n    const time = new Date(timestamp);\n    const diffInHours = Math.floor((now.getTime() - time.getTime()) / (1000 * 60 * 60));\n    \n    if (diffInHours < 1) return 'Agora há pouco';\n    if (diffInHours < 24) return `${diffInHours}h atrás`;\n    return `${Math.floor(diffInHours / 24)}d atrás`;\n  };\n\n  const getProgressPercentage = (current: number, target: number) => {\n    return Math.min((current / target) * 100, 100);\n  };\n\n  const getGreeting = () => {\n    const hour = currentTime.getHours();\n    if (hour < 12) return 'Bom dia';\n    if (hour < 18) return 'Boa tarde';\n    return 'Boa noite';\n  };\n\n  const getNextLevelXP = () => {\n    if (!stats) return 1000;\n    return (stats.level * 1000) - (stats.xp_points % 1000);\n  };\n\n  const getLevelProgress = () => {\n    if (!stats) return 0;\n    return (stats.xp_points % 1000) / 10;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"relative\">\n          <div className=\"loading-spinner w-12 h-12\"></div>\n          <div className=\"absolute inset-0 bg-gradient-to-r from-primary-500 to-gold-500 rounded-full animate-ping opacity-20\"></div>\n        </div>\n        <p className=\"ml-6 text-navy-600 font-medium text-lg\">Carregando seu universo jurídico...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-8 animate-fade-in-up\">\n      {/* Hero Section Ultra Moderno */}\n      <div className=\"relative overflow-hidden card-gradient rounded-3xl p-8 shadow-glass-xl border border-white/20\">\n        {/* Background Decorations Avançadas */}\n        <div className=\"absolute top-0 right-0 w-96 h-96 bg-gradient-to-br from-primary-400/20 via-purple-400/20 to-transparent rounded-full blur-3xl animate-float\"></div>\n        <div className=\"absolute bottom-0 left-0 w-64 h-64 bg-gradient-to-tr from-gold-500/20 to-transparent rounded-full blur-2xl animate-blob\"></div>\n        <div className=\"absolute top-1/2 left-1/3 w-32 h-32 bg-gradient-to-r from-legal-500/10 to-transparent rounded-full blur-xl animate-pulse\"></div>\n        \n        <div className=\"relative z-10\">\n          <div className=\"flex flex-col lg:flex-row items-start lg:items-center justify-between space-y-6 lg:space-y-0\">\n            <div className=\"flex-1\">\n              <div className=\"flex items-center space-x-3 mb-4\">\n                <div className=\"flex items-center space-x-2\">\n                  <SparklesIcon className=\"h-6 w-6 text-gold-500 animate-pulse\" />\n                  <span className=\"text-gold-600 font-semibold text-sm\">\n                    {getGreeting()}, futuro(a) aprovado(a)!\n                  </span>\n                </div>\n                <div className=\"px-3 py-1 glass rounded-full\">\n                  <span className=\"text-xs font-bold text-navy-700\">\n                    {currentTime.toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' })}\n                  </span>\n                </div>\n              </div>\n              \n              <h1 className=\"text-4xl lg:text-5xl font-bold mb-3 title-gradient\">\n                Olá, {user?.first_name}! 👋\n              </h1>\n              \n              <p className=\"text-navy-600 text-lg lg:text-xl font-medium mb-4\">\n                {motivationalQuote}\n              </p>\n\n              {/* Level Progress */}\n              <div className=\"glass rounded-2xl p-4 mb-6 max-w-md\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <span className=\"text-sm font-semibold text-navy-700\">Nível {stats?.level}</span>\n                  <span className=\"text-xs text-navy-500\">{getNextLevelXP()} XP para o próximo nível</span>\n                </div>\n                <div className=\"progress mb-2\">\n                  <div \n                    className=\"progress-bar transition-all duration-1000 ease-out\"\n                    style={{ width: `${getLevelProgress()}%` }}\n                  ></div>\n                </div>\n                <div className=\"flex items-center justify-between text-xs text-navy-500\">\n                  <span>{stats?.xp_points.toLocaleString()} XP</span>\n                  <span>{((stats?.level || 1) * 1000).toLocaleString()} XP</span>\n                </div>\n              </div>\n\n              {/* Quick Stats Inline */}\n              <div className=\"flex flex-wrap items-center gap-4\">\n                <div className=\"flex items-center space-x-2 glass px-4 py-2 rounded-2xl hover-lift\">\n                  <FireSolid className=\"h-5 w-5 text-orange-500 animate-pulse\" />\n                  <span className=\"font-bold text-navy-800\">{stats?.current_streak} dias</span>\n                  <span className=\"text-sm text-navy-500\">sequência</span>\n                </div>\n                <div className=\"flex items-center space-x-2 glass px-4 py-2 rounded-2xl hover-lift\">\n                  <TrophySolid className=\"h-5 w-5 text-gold-500\" />\n                  <span className=\"font-bold text-navy-800\">{stats?.xp_points.toLocaleString()}</span>\n                  <span className=\"text-sm text-navy-500\">XP</span>\n                </div>\n                <div className=\"flex items-center space-x-2 glass px-4 py-2 rounded-2xl hover-lift\">\n                  <ChartBarIcon className=\"h-5 w-5 text-legal-500\" />\n                  <span className=\"font-bold text-navy-800\">{getAccuracyPercentage()}%</span>\n                  <span className=\"text-sm text-navy-500\">precisão</span>\n                </div>\n                <div className=\"flex items-center space-x-2 glass px-4 py-2 rounded-2xl hover-lift\">\n                  <HeartSolid className=\"h-5 w-5 text-rose-500\" />\n                  <span className=\"font-bold text-navy-800\">{stats?.hearts}</span>\n                  <span className=\"text-sm text-navy-500\">vidas</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex flex-col space-y-3\">\n              <button className=\"btn btn-legal btn-lg group\">\n                <PlayIcon className=\"h-5 w-5 mr-2 group-hover:animate-pulse\" />\n                Continuar Estudando\n                <RocketLaunchIcon className=\"h-4 w-4 ml-2 group-hover:translate-x-1 transition-transform\" />\n              </button>\n              <button className=\"btn btn-outline\">\n                <BeakerIcon className=\"h-5 w-5 mr-2\" />\n                Laboratório IA\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Stats Grid Ultra Moderno */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        {/* XP Card */}\n        <div className=\"interactive-card group\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"achievement-badge group-hover:scale-110 transition-transform duration-300\">\n              <TrophySolid className=\"h-8 w-8 text-white\" />\n            </div>\n            <div className=\"text-right\">\n              <p className=\"text-3xl font-bold text-navy-800\">{stats?.xp_points.toLocaleString()}</p>\n              <p className=\"text-sm text-navy-500 font-medium\">Pontos XP</p>\n            </div>\n          </div>\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"text-xs text-navy-400\">Próximo nível</span>\n            <span className=\"text-xs font-bold text-gold-600\">+{getNextLevelXP()} XP</span>\n          </div>\n          <div className=\"progress\">\n            <div \n              className=\"progress-bar-gold transition-all duration-500\"\n              style={{ width: `${getLevelProgress()}%` }}\n            ></div>\n          </div>\n        </div>\n\n        {/* Streak Card */}\n        <div className=\"interactive-card group\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"p-3 bg-gradient-to-br from-orange-500 to-red-500 rounded-2xl shadow-colored-gold group-hover:scale-110 transition-transform duration-300\">\n              <FireSolid className=\"h-8 w-8 text-white animate-pulse\" />\n            </div>\n            <div className=\"text-right\">\n              <p className=\"text-3xl font-bold text-navy-800\">{stats?.current_streak}</p>\n              <p className=\"text-sm text-navy-500 font-medium\">Dias Seguidos</p>\n            </div>\n          </div>\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"text-xs text-navy-400\">Recorde pessoal</span>\n            <span className=\"text-xs font-bold text-orange-600\">{stats?.best_streak} dias</span>\n          </div>\n          <div className=\"flex space-x-1\">\n            {studyStreak.map((day, index) => (\n              <div\n                key={index}\n                className={`flex-1 h-2 rounded-full transition-all duration-300 ${\n                  day.completed \n                    ? 'bg-gradient-to-r from-orange-500 to-red-500' \n                    : 'bg-slate-200'\n                }`}\n                title={`${day.day}: ${day.completed ? `${day.xp} XP` : 'Não completado'}`}\n              ></div>\n            ))}\n          </div>\n        </div>\n\n        {/* Accuracy Card */}\n        <div className=\"interactive-card group\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"p-3 bg-gradient-to-br from-legal-500 to-legal-600 rounded-2xl shadow-colored-legal group-hover:scale-110 transition-transform duration-300\">\n              <ChartBarIcon className=\"h-8 w-8 text-white\" />\n            </div>\n            <div className=\"text-right\">\n              <p className=\"text-3xl font-bold text-navy-800\">{getAccuracyPercentage()}%</p>\n              <p className=\"text-sm text-navy-500 font-medium\">Precisão</p>\n            </div>\n          </div>\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"text-xs text-navy-400\">Questões corretas</span>\n            <span className=\"text-xs font-bold text-legal-600\">{stats?.correct_answers}/{stats?.questions_answered}</span>\n          </div>\n          <div className=\"progress\">\n            <div \n              className=\"progress-bar-legal transition-all duration-500\"\n              style={{ width: `${getAccuracyPercentage()}%` }}\n            ></div>\n          </div>\n        </div>\n\n        {/* Study Time Card */}\n        <div className=\"interactive-card group\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"p-3 bg-gradient-to-br from-primary-500 to-purple-600 rounded-2xl shadow-colored-primary group-hover:scale-110 transition-transform duration-300\">\n              <ClockIcon className=\"h-8 w-8 text-white\" />\n            </div>\n            <div className=\"text-right\">\n              <p className=\"text-3xl font-bold text-navy-800\">{Math.floor((stats?.total_study_time || 0) / 60)}</p>\n              <p className=\"text-sm text-navy-500 font-medium\">Horas Estudadas</p>\n            </div>\n          </div>\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"text-xs text-navy-400\">Esta semana</span>\n            <span className=\"text-xs font-bold text-primary-600\">{formatTime((stats?.total_study_time || 0) % 420)}</span>\n          </div>\n          <div className=\"progress\">\n            <div \n              className=\"progress-bar transition-all duration-500\"\n              style={{ width: `${Math.min(((stats?.total_study_time || 0) % 420) / 4.2, 100)}%` }}\n            ></div>\n          </div>\n        </div>\n      </div>\n\n      {/* Daily Goals Section Modernizada */}\n      <div className=\"card\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"p-2 bg-gradient-to-br from-primary-500 to-purple-600 rounded-2xl\">\n              <CalendarDaysIcon className=\"h-6 w-6 text-white\" />\n            </div>\n            <div>\n              <h2 className=\"text-xl font-bold text-navy-800\">Metas Diárias</h2>\n              <p className=\"text-sm text-navy-500\">Mantenha o foco e alcance seus objetivos</p>\n            </div>\n          </div>\n          <button className=\"btn btn-ghost btn-sm\">\n            <EyeIcon className=\"h-4 w-4 mr-2\" />\n            Ver todas\n          </button>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {dailyGoals.map((goal) => {\n            const IconComponent = goal.icon;\n            const progress = getProgressPercentage(goal.current, goal.target);\n            const isCompleted = progress >= 100;\n            \n            return (\n              <div key={goal.id} className={`glass rounded-2xl p-4 hover-lift ${\n                isCompleted ? 'success-glow' : ''\n              }`}>\n                <div className=\"flex items-center justify-between mb-3\">\n                  <div className={`p-2 rounded-xl bg-gradient-to-r ${goal.color}`}>\n                    <IconComponent className=\"h-5 w-5 text-white\" />\n                  </div>\n                  {isCompleted && (\n                    <CheckSolid className=\"h-5 w-5 text-legal-500\" />\n                  )}\n                </div>\n                \n                <h3 className=\"font-semibold text-navy-800 text-sm mb-1\">{goal.type}</h3>\n                <div className=\"flex items-baseline space-x-1 mb-2\">\n                  <span className=\"text-2xl font-bold text-navy-800\">{goal.current}</span>\n                  <span className=\"text-sm text-navy-500\">/ {goal.target} {goal.unit}</span>\n                </div>\n                \n                <div className=\"progress mb-2\">\n                  <div \n                    className={`h-full rounded-full transition-all duration-500 ${\n                      isCompleted \n                        ? 'bg-gradient-to-r from-legal-500 to-legal-600' \n                        : `bg-gradient-to-r ${goal.color}`\n                    }`}\n                    style={{ width: `${Math.min(progress, 100)}%` }}\n                  ></div>\n                </div>\n                \n                <p className=\"text-xs text-navy-500\">\n                  {isCompleted ? 'Meta concluída! 🎉' : `${Math.round(progress)}% concluído`}\n                </p>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Grid de Conteúdo Principal */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n        {/* Subjects Progress */}\n        <div className=\"lg:col-span-2 card\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"p-2 bg-gradient-to-br from-legal-500 to-legal-600 rounded-2xl\">\n                <BookOpenIcon className=\"h-6 w-6 text-white\" />\n              </div>\n              <div>\n                <h2 className=\"text-xl font-bold text-navy-800\">Disciplinas em Progresso</h2>\n                <p className=\"text-sm text-navy-500\">Continue de onde parou</p>\n              </div>\n            </div>\n            <button className=\"btn btn-ghost btn-sm\">\n              Ver todas\n              <ChevronRightIcon className=\"h-4 w-4 ml-1\" />\n            </button>\n          </div>\n\n          <div className=\"space-y-4\">\n            {subjects.map((subject) => {\n              const IconComponent = subject.icon;\n              \n              return (\n                <div key={subject.id} className=\"glass rounded-2xl p-4 hover-lift cursor-pointer group\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className={`p-3 rounded-2xl bg-gradient-to-r ${subject.color} group-hover:scale-110 transition-transform duration-300`}>\n                      <IconComponent className=\"h-6 w-6 text-white\" />\n                    </div>\n                    \n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <h3 className=\"font-semibold text-navy-800\">{subject.name}</h3>\n                        <span className=\"text-sm font-bold text-navy-600\">{subject.progress}%</span>\n                      </div>\n                      \n                      <div className=\"progress mb-2\">\n                        <div \n                          className={`h-full rounded-full bg-gradient-to-r ${subject.color} transition-all duration-500`}\n                          style={{ width: `${subject.progress}%` }}\n                        ></div>\n                      </div>\n                      \n                      <div className=\"flex items-center justify-between text-sm\">\n                        <span className=\"text-navy-500\">\n                          {subject.completedLessons}/{subject.totalLessons} lições\n                        </span>\n                        <span className=\"text-navy-600 font-medium\">\n                          Próximo: {subject.nextLesson}\n                        </span>\n                      </div>\n                    </div>\n                    \n                    <button className=\"btn btn-primary btn-sm opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n                      <PlayIcon className=\"h-4 w-4\" />\n                    </button>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Recent Activities */}\n        <div className=\"card\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"p-2 bg-gradient-to-br from-purple-500 to-purple-600 rounded-2xl\">\n                <BoltIcon className=\"h-6 w-6 text-white\" />\n              </div>\n              <div>\n                <h2 className=\"text-lg font-bold text-navy-800\">Atividades Recentes</h2>\n                <p className=\"text-sm text-navy-500\">Suas últimas conquistas</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n            {recentActivities.map((activity) => {\n              const IconComponent = activity.icon;\n              \n              return (\n                <div key={activity.id} className=\"glass rounded-2xl p-3 hover-lift cursor-pointer group\">\n                  <div className=\"flex items-start space-x-3\">\n                    <div className={`p-2 rounded-xl bg-gradient-to-r ${activity.color} group-hover:scale-110 transition-transform duration-300 flex-shrink-0`}>\n                      <IconComponent className=\"h-4 w-4 text-white\" />\n                    </div>\n                    \n                    <div className=\"flex-1 min-w-0\">\n                      <h4 className=\"font-semibold text-navy-800 text-sm mb-1\">{activity.title}</h4>\n                      <p className=\"text-xs text-navy-500 mb-2\">{activity.description}</p>\n                      \n                      <div className=\"flex items-center justify-between\">\n                        <span className=\"text-xs text-navy-400\">{getTimeAgo(activity.timestamp)}</span>\n                        {activity.xp_earned && (\n                          <span className=\"text-xs font-bold text-gold-600\">+{activity.xp_earned} XP</span>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n\n      {/* Quick Actions */}\n      <div className=\"card\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"p-2 bg-gradient-to-br from-cyan-500 to-cyan-600 rounded-2xl\">\n              <RocketLaunchIcon className=\"h-6 w-6 text-white\" />\n            </div>\n            <div>\n              <h2 className=\"text-xl font-bold text-navy-800\">Ações Rápidas</h2>\n              <p className=\"text-sm text-navy-500\">Acelere seus estudos</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n          <button className=\"glass rounded-2xl p-4 hover-lift text-center group\">\n            <div className=\"p-3 bg-gradient-to-r from-primary-500 to-primary-600 rounded-2xl mx-auto mb-3 w-fit group-hover:scale-110 transition-transform duration-300\">\n              <QuestionMarkCircleIcon className=\"h-6 w-6 text-white\" />\n            </div>\n            <h3 className=\"font-semibold text-navy-800 text-sm mb-1\">Questões Rápidas</h3>\n            <p className=\"text-xs text-navy-500\">5 questões aleatórias</p>\n          </button>\n\n          <button className=\"glass rounded-2xl p-4 hover-lift text-center group\">\n            <div className=\"p-3 bg-gradient-to-r from-legal-500 to-legal-600 rounded-2xl mx-auto mb-3 w-fit group-hover:scale-110 transition-transform duration-300\">\n              <DocumentTextIcon className=\"h-6 w-6 text-white\" />\n            </div>\n            <h3 className=\"font-semibold text-navy-800 text-sm mb-1\">Simulado Express</h3>\n            <p className=\"text-xs text-navy-500\">20 questões - 30 min</p>\n          </button>\n\n          <button className=\"glass rounded-2xl p-4 hover-lift text-center group\">\n            <div className=\"p-3 bg-gradient-to-r from-purple-500 to-purple-600 rounded-2xl mx-auto mb-3 w-fit group-hover:scale-110 transition-transform duration-300\">\n              <LightBulbIcon className=\"h-6 w-6 text-white\" />\n            </div>\n            <h3 className=\"font-semibold text-navy-800 text-sm mb-1\">Revisão IA</h3>\n            <p className=\"text-xs text-navy-500\">Tópicos personalizados</p>\n          </button>\n\n          <button className=\"glass rounded-2xl p-4 hover-lift text-center group\">\n            <div className=\"p-3 bg-gradient-to-r from-gold-500 to-gold-600 rounded-2xl mx-auto mb-3 w-fit group-hover:scale-110 transition-transform duration-300\">\n              <GiftIcon className=\"h-6 w-6 text-white\" />\n            </div>\n            <h3 className=\"font-semibold text-navy-800 text-sm mb-1\">Desafio Diário</h3>\n            <p className=\"text-xs text-navy-500\">Bônus de XP duplo</p>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;

