{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{TrophyIcon,StarIcon,FireIcon,BookOpenIcon,CheckCircleIcon,ClockIcon,ChartBarIcon,CurrencyDollarIcon,SparklesIcon,LockClosedIcon}from'@heroicons/react/24/outline';import{TrophyIcon as TrophySolid,StarIcon as StarSolid,FireIcon as FireSolid}from'@heroicons/react/24/solid';import{apiService}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Achievements=()=>{const[achievements,setAchievements]=useState([]);const[userAchievements,setUserAchievements]=useState([]);const[achievementProgress,setAchievementProgress]=useState({});const[loading,setLoading]=useState(true);const[selectedCategory,setSelectedCategory]=useState('all');const[selectedRarity,setSelectedRarity]=useState('all');const categories=[{id:'all',name:'Todas',icon:SparklesIcon},{id:'study',name:'Estudos',icon:BookOpenIcon},{id:'questions',name:'Questões',icon:CheckCircleIcon},{id:'streak',name:'Sequência',icon:FireIcon},{id:'progress',name:'Progresso',icon:ChartBarIcon},{id:'social',name:'Social',icon:TrophyIcon},{id:'special',name:'Especiais',icon:StarIcon}];const rarities=[{id:'all',name:'Todas',color:'text-gray-600'},{id:'common',name:'Comum',color:'text-gray-600'},{id:'rare',name:'Raro',color:'text-blue-600'},{id:'epic',name:'Épico',color:'text-purple-600'},{id:'legendary',name:'Lendário',color:'text-yellow-600'}];const loadAchievements=useCallback(async()=>{try{const[achievementsData,userAchievementsData]=await Promise.all([apiService.getAchievements(),apiService.getUserAchievements()]);setAchievements(achievementsData);setUserAchievements(userAchievementsData);// Mock progress data\nconst progressData={};achievementsData.forEach(achievement=>{const userAchievement=userAchievementsData.find(ua=>ua.achievement.id===achievement.id);if(!userAchievement){// Create mock progress for unearned achievements\nconst required=getRequirementValue(achievement.requirements);const current=Math.floor(Math.random()*required);progressData[achievement.id]={achievement_id:achievement.id,current_progress:current,total_required:required,percentage:Math.round(current/required*100)};}});setAchievementProgress(progressData);}catch(error){console.error('Erro ao carregar conquistas:',error);// Mock data for development\nconst mockAchievements=[{id:1,title:'Primeiro Passo',description:'Complete sua primeira lição',icon:'trophy',rarity:'common',achievement_type:'study',xp_reward:50,coin_reward:10,requirements:JSON.stringify({lessons_completed:1}),created_at:new Date().toISOString(),updated_at:new Date().toISOString()},{id:2,title:'Sequência de Fogo',description:'Mantenha uma sequência de 7 dias consecutivos',icon:'fire',rarity:'rare',achievement_type:'streak',xp_reward:100,coin_reward:25,requirements:JSON.stringify({streak_days:7}),created_at:new Date().toISOString(),updated_at:new Date().toISOString()},{id:3,title:'Mestre das Questões',description:'Responda 100 questões corretamente',icon:'star',rarity:'epic',achievement_type:'questions',xp_reward:200,coin_reward:50,requirements:JSON.stringify({correct_answers:100}),created_at:new Date().toISOString(),updated_at:new Date().toISOString()},{id:4,title:'Lenda Jurídica',description:'Alcance 10.000 pontos de XP',icon:'crown',rarity:'legendary',achievement_type:'progress',xp_reward:500,coin_reward:100,requirements:JSON.stringify({total_xp:10000}),created_at:new Date().toISOString(),updated_at:new Date().toISOString()}];const mockUserAchievements=[{id:1,user:1,achievement:mockAchievements[0],earned_at:new Date(Date.now()-86400000).toISOString(),progress:1}];setAchievements(mockAchievements);setUserAchievements(mockUserAchievements);// Mock progress\nconst progressData={2:{achievement_id:2,current_progress:4,total_required:7,percentage:57},3:{achievement_id:3,current_progress:45,total_required:100,percentage:45},4:{achievement_id:4,current_progress:2500,total_required:10000,percentage:25}};setAchievementProgress(progressData);}finally{setLoading(false);}},[]);useEffect(()=>{loadAchievements();},[loadAchievements]);const getRequirementValue=requirements=>{try{const req=JSON.parse(requirements);return Object.values(req)[0];}catch(_unused){return 1;}};const getAchievementIcon=(iconName,isEarned)=>{const iconClass=\"h-8 w-8 \".concat(isEarned?'text-yellow-500':'text-gray-400');switch(iconName){case'trophy':return isEarned?/*#__PURE__*/_jsx(TrophySolid,{className:iconClass}):/*#__PURE__*/_jsx(TrophyIcon,{className:iconClass});case'fire':return isEarned?/*#__PURE__*/_jsx(FireSolid,{className:iconClass}):/*#__PURE__*/_jsx(FireIcon,{className:iconClass});case'star':return isEarned?/*#__PURE__*/_jsx(StarSolid,{className:iconClass}):/*#__PURE__*/_jsx(StarIcon,{className:iconClass});default:return isEarned?/*#__PURE__*/_jsx(TrophySolid,{className:iconClass}):/*#__PURE__*/_jsx(TrophyIcon,{className:iconClass});}};const getRarityColor=rarity=>{const colors={common:'border-gray-300 bg-gray-50',rare:'border-blue-300 bg-blue-50',epic:'border-purple-300 bg-purple-50',legendary:'border-yellow-300 bg-yellow-50'};return colors[rarity]||colors.common;};const getRarityBadgeColor=rarity=>{const colors={common:'bg-gray-100 text-gray-800',rare:'bg-blue-100 text-blue-800',epic:'bg-purple-100 text-purple-800',legendary:'bg-yellow-100 text-yellow-800'};return colors[rarity]||colors.common;};const isAchievementEarned=achievementId=>{return userAchievements.some(ua=>ua.achievement.id===achievementId);};const getAchievementProgress=achievement=>{return achievementProgress[achievement.id]||null;};const formatTimeAgo=dateString=>{const now=new Date();const date=new Date(dateString);const diffInHours=Math.floor((now.getTime()-date.getTime())/(1000*60*60));if(diffInHours<24)return\"\".concat(diffInHours,\"h atr\\xE1s\");const days=Math.floor(diffInHours/24);return\"\".concat(days,\"d atr\\xE1s\");};const filteredAchievements=achievements.filter(achievement=>{const categoryMatch=selectedCategory==='all'||achievement.achievement_type===selectedCategory;const rarityMatch=selectedRarity==='all'||achievement.rarity===selectedRarity;return categoryMatch&&rarityMatch;});const earnedCount=userAchievements.length;const totalXPFromAchievements=userAchievements.reduce((sum,ua)=>sum+ua.achievement.xp_reward,0);const totalCoinsFromAchievements=userAchievements.reduce((sum,ua)=>sum+ua.achievement.coin_reward,0);if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-64\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-r from-yellow-500 to-orange-500 rounded-2xl p-6 text-white\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold\",children:\"Conquistas\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-yellow-100 mt-2\",children:\"Desbloqueie conquistas e ganhe recompensas por seus estudos\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-4 gap-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card card-hover\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-yellow-100 p-3 rounded-xl\",children:/*#__PURE__*/_jsx(TrophyIcon,{className:\"h-6 w-6 text-yellow-600\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-4\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-600\",children:\"Conquistas\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-2xl font-bold text-gray-900\",children:[earnedCount,\" / \",achievements.length]})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"card card-hover\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-blue-100 p-3 rounded-xl\",children:/*#__PURE__*/_jsx(StarIcon,{className:\"h-6 w-6 text-blue-600\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-4\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-600\",children:\"XP das Conquistas\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-bold text-gray-900\",children:totalXPFromAchievements})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"card card-hover\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-100 p-3 rounded-xl\",children:/*#__PURE__*/_jsx(CurrencyDollarIcon,{className:\"h-6 w-6 text-green-600\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-4\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-600\",children:\"Moedas das Conquistas\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-bold text-gray-900\",children:totalCoinsFromAchievements})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"card card-hover\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-purple-100 p-3 rounded-xl\",children:/*#__PURE__*/_jsx(ChartBarIcon,{className:\"h-6 w-6 text-purple-600\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-4\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-600\",children:\"Progresso\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-2xl font-bold text-gray-900\",children:[Math.round(earnedCount/achievements.length*100),\"%\"]})]})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsx(\"div\",{className:\"p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col lg:flex-row gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Categoria\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2\",children:categories.map(category=>{const IconComponent=category.icon;return/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setSelectedCategory(category.id),className:\"flex items-center px-3 py-2 rounded-lg text-sm font-medium transition-colors \".concat(selectedCategory===category.id?'bg-primary-600 text-white':'bg-gray-100 text-gray-700 hover:bg-gray-200'),children:[/*#__PURE__*/_jsx(IconComponent,{className:\"h-4 w-4 mr-2\"}),category.name]},category.id);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"lg:w-48\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Raridade\"}),/*#__PURE__*/_jsx(\"select\",{className:\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-transparent\",value:selectedRarity,onChange:e=>setSelectedRarity(e.target.value),children:rarities.map(rarity=>/*#__PURE__*/_jsx(\"option\",{value:rarity.id,children:rarity.name},rarity.id))})]})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",children:filteredAchievements.map(achievement=>{var _rarities$find;const isEarned=isAchievementEarned(achievement.id);const progress=getAchievementProgress(achievement);const earnedData=userAchievements.find(ua=>ua.achievement.id===achievement.id);return/*#__PURE__*/_jsxs(\"div\",{className:\"card relative overflow-hidden \".concat(isEarned?getRarityColor(achievement.rarity):'border-gray-200 bg-gray-50',\" \").concat(isEarned?'shadow-lg':''),children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-4 right-4\",children:/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 rounded-md text-xs font-medium \".concat(getRarityBadgeColor(achievement.rarity)),children:((_rarities$find=rarities.find(r=>r.id===achievement.rarity))===null||_rarities$find===void 0?void 0:_rarities$find.name)||'Comum'})}),!isEarned&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-4 left-4\",children:/*#__PURE__*/_jsx(LockClosedIcon,{className:\"h-5 w-5 text-gray-400\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"inline-flex items-center justify-center w-16 h-16 rounded-full mb-3 \".concat(isEarned?'bg-yellow-100':'bg-gray-200'),children:getAchievementIcon(achievement.icon,isEarned)}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-bold \".concat(isEarned?'text-gray-900':'text-gray-600'),children:achievement.title}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm mt-1 \".concat(isEarned?'text-gray-700':'text-gray-500'),children:achievement.description})]}),!isEarned&&progress&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-sm text-gray-600 mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Progresso\"}),/*#__PURE__*/_jsxs(\"span\",{children:[progress.current_progress,\" / \",progress.total_required]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-primary-600 h-2 rounded-full transition-all duration-300\",style:{width:\"\".concat(progress.percentage,\"%\")}})}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-500 mt-1 text-center\",children:[progress.percentage,\"% completo\"]})]}),isEarned&&earnedData&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4 text-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center text-sm text-green-600\",children:[/*#__PURE__*/_jsx(CheckCircleIcon,{className:\"h-4 w-4 mr-1\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Conquistado \",formatTimeAgo(earnedData.earned_at)]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center space-x-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(StarIcon,{className:\"h-4 w-4 text-yellow-500 mr-1\"}),/*#__PURE__*/_jsxs(\"span\",{className:isEarned?'text-gray-700':'text-gray-500',children:[achievement.xp_reward,\" XP\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(CurrencyDollarIcon,{className:\"h-4 w-4 text-green-500 mr-1\"}),/*#__PURE__*/_jsxs(\"span\",{className:isEarned?'text-gray-700':'text-gray-500',children:[achievement.coin_reward,\" moedas\"]})]})]})]})]},achievement.id);})}),filteredAchievements.length===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-12\",children:[/*#__PURE__*/_jsx(TrophyIcon,{className:\"h-16 w-16 text-gray-400 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold text-gray-900 mb-2\",children:\"Nenhuma conquista encontrada\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Tente ajustar os filtros para ver diferentes conquistas.\"})]}),userAchievements.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold text-gray-900 mb-4\",children:\"Conquistas Recentes\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:userAchievements.slice(0,3).map(userAchievement=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center p-4 bg-yellow-50 border border-yellow-200 rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",children:getAchievementIcon(userAchievement.achievement.icon,true)}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-4 flex-1\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-semibold text-gray-900\",children:userAchievement.achievement.title}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:userAchievement.achievement.description})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center text-sm text-gray-500\",children:[/*#__PURE__*/_jsx(ClockIcon,{className:\"h-4 w-4 mr-1\"}),formatTimeAgo(userAchievement.earned_at)]})]},userAchievement.id))})]})})]});};export default Achievements;","map":{"version":3,"names":["React","useState","useEffect","useCallback","TrophyIcon","StarIcon","FireIcon","BookOpenIcon","CheckCircleIcon","ClockIcon","ChartBarIcon","CurrencyDollarIcon","SparklesIcon","LockClosedIcon","TrophySolid","StarSolid","FireSolid","apiService","jsx","_jsx","jsxs","_jsxs","Achievements","achievements","setAchievements","userAchievements","setUserAchievements","achievementProgress","setAchievementProgress","loading","setLoading","selectedCategory","setSelectedCategory","selectedRarity","setSelectedRarity","categories","id","name","icon","rarities","color","loadAchievements","achievementsData","userAchievementsData","Promise","all","getAchievements","getUserAchievements","progressData","forEach","achievement","userAchievement","find","ua","required","getRequirementValue","requirements","current","Math","floor","random","achievement_id","current_progress","total_required","percentage","round","error","console","mockAchievements","title","description","rarity","achievement_type","xp_reward","coin_reward","JSON","stringify","lessons_completed","created_at","Date","toISOString","updated_at","streak_days","correct_answers","total_xp","mockUserAchievements","user","earned_at","now","progress","req","parse","Object","values","_unused","getAchievementIcon","iconName","isEarned","iconClass","concat","className","getRarityColor","colors","common","rare","epic","legendary","getRarityBadgeColor","isAchievementEarned","achievementId","some","getAchievementProgress","formatTimeAgo","dateString","date","diffInHours","getTime","days","filteredAchievements","filter","categoryMatch","rarityMatch","earnedCount","length","totalXPFromAchievements","reduce","sum","totalCoinsFromAchievements","children","map","category","IconComponent","onClick","value","onChange","e","target","_rarities$find","earnedData","r","style","width","slice"],"sources":["/Users/mdearaujo/Documents/Projetos/git/duolingo-juridico/frontend/src/pages/Achievements.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { \n  TrophyIcon,\n  StarIcon,\n  FireIcon,\n  BookOpenIcon,\n  CheckCircleIcon,\n  ClockIcon,\n  ChartBarIcon,\n  CurrencyDollarIcon,\n  SparklesIcon,\n  LockClosedIcon\n} from '@heroicons/react/24/outline';\nimport { \n  TrophyIcon as TrophySolid,\n  StarIcon as StarSolid,\n  FireIcon as FireSolid\n} from '@heroicons/react/24/solid';\nimport { Achievement, UserAchievement } from '../types';\nimport { apiService } from '../services/api';\nimport { useAuth } from '../contexts/AuthContext';\n\ninterface AchievementProgress {\n  achievement_id: number;\n  current_progress: number;\n  total_required: number;\n  percentage: number;\n}\n\nconst Achievements: React.FC = () => {\n  const [achievements, setAchievements] = useState<Achievement[]>([]);\n  const [userAchievements, setUserAchievements] = useState<UserAchievement[]>([]);\n  const [achievementProgress, setAchievementProgress] = useState<Record<number, AchievementProgress>>({});\n  const [loading, setLoading] = useState(true);\n  const [selectedCategory, setSelectedCategory] = useState<string>('all');\n  const [selectedRarity, setSelectedRarity] = useState<string>('all');\n\n  const categories = [\n    { id: 'all', name: 'Todas', icon: SparklesIcon },\n    { id: 'study', name: 'Estudos', icon: BookOpenIcon },\n    { id: 'questions', name: 'Questões', icon: CheckCircleIcon },\n    { id: 'streak', name: 'Sequência', icon: FireIcon },\n    { id: 'progress', name: 'Progresso', icon: ChartBarIcon },\n    { id: 'social', name: 'Social', icon: TrophyIcon },\n    { id: 'special', name: 'Especiais', icon: StarIcon }\n  ];\n\n  const rarities = [\n    { id: 'all', name: 'Todas', color: 'text-gray-600' },\n    { id: 'common', name: 'Comum', color: 'text-gray-600' },\n    { id: 'rare', name: 'Raro', color: 'text-blue-600' },\n    { id: 'epic', name: 'Épico', color: 'text-purple-600' },\n    { id: 'legendary', name: 'Lendário', color: 'text-yellow-600' }\n  ];\n\n  const loadAchievements = useCallback(async () => {\n    try {\n      const [achievementsData, userAchievementsData] = await Promise.all([\n        apiService.getAchievements(),\n        apiService.getUserAchievements()\n      ]);\n\n      setAchievements(achievementsData);\n      setUserAchievements(userAchievementsData);\n\n      // Mock progress data\n      const progressData: Record<number, AchievementProgress> = {};\n      achievementsData.forEach(achievement => {\n        const userAchievement = userAchievementsData.find(ua => ua.achievement.id === achievement.id);\n        \n        if (!userAchievement) {\n          // Create mock progress for unearned achievements\n          const required = getRequirementValue(achievement.requirements);\n          const current = Math.floor(Math.random() * required);\n          \n          progressData[achievement.id] = {\n            achievement_id: achievement.id,\n            current_progress: current,\n            total_required: required,\n            percentage: Math.round((current / required) * 100)\n          };\n        }\n      });\n\n      setAchievementProgress(progressData);\n    } catch (error) {\n      console.error('Erro ao carregar conquistas:', error);\n\n      // Mock data for development\n      const mockAchievements: Achievement[] = [\n        {\n          id: 1,\n          title: 'Primeiro Passo',\n          description: 'Complete sua primeira lição',\n          icon: 'trophy',\n          rarity: 'common',\n          achievement_type: 'study',\n          xp_reward: 50,\n          coin_reward: 10,\n          requirements: JSON.stringify({ lessons_completed: 1 }),\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        },\n        {\n          id: 2,\n          title: 'Sequência de Fogo',\n          description: 'Mantenha uma sequência de 7 dias consecutivos',\n          icon: 'fire',\n          rarity: 'rare',\n          achievement_type: 'streak',\n          xp_reward: 100,\n          coin_reward: 25,\n          requirements: JSON.stringify({ streak_days: 7 }),\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        },\n        {\n          id: 3,\n          title: 'Mestre das Questões',\n          description: 'Responda 100 questões corretamente',\n          icon: 'star',\n          rarity: 'epic',\n          achievement_type: 'questions',\n          xp_reward: 200,\n          coin_reward: 50,\n          requirements: JSON.stringify({ correct_answers: 100 }),\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        },\n        {\n          id: 4,\n          title: 'Lenda Jurídica',\n          description: 'Alcance 10.000 pontos de XP',\n          icon: 'crown',\n          rarity: 'legendary',\n          achievement_type: 'progress',\n          xp_reward: 500,\n          coin_reward: 100,\n          requirements: JSON.stringify({ total_xp: 10000 }),\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        }\n      ];\n\n      const mockUserAchievements: UserAchievement[] = [\n        {\n          id: 1,\n          user: 1,\n          achievement: mockAchievements[0],\n          earned_at: new Date(Date.now() - 86400000).toISOString(),\n          progress: 1\n        }\n      ];\n\n      setAchievements(mockAchievements);\n      setUserAchievements(mockUserAchievements);\n\n      // Mock progress\n      const progressData: Record<number, AchievementProgress> = {\n        2: { achievement_id: 2, current_progress: 4, total_required: 7, percentage: 57 },\n        3: { achievement_id: 3, current_progress: 45, total_required: 100, percentage: 45 },\n        4: { achievement_id: 4, current_progress: 2500, total_required: 10000, percentage: 25 }\n      };\n      setAchievementProgress(progressData);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadAchievements();\n  }, [loadAchievements]);\n\n  const getRequirementValue = (requirements: string): number => {\n    try {\n      const req = JSON.parse(requirements);\n      return Object.values(req)[0] as number;\n    } catch {\n      return 1;\n    }\n  };\n\n  const getAchievementIcon = (iconName: string, isEarned: boolean) => {\n    const iconClass = `h-8 w-8 ${isEarned ? 'text-yellow-500' : 'text-gray-400'}`;\n    \n    switch (iconName) {\n      case 'trophy':\n        return isEarned ? <TrophySolid className={iconClass} /> : <TrophyIcon className={iconClass} />;\n      case 'fire':\n        return isEarned ? <FireSolid className={iconClass} /> : <FireIcon className={iconClass} />;\n      case 'star':\n        return isEarned ? <StarSolid className={iconClass} /> : <StarIcon className={iconClass} />;\n      default:\n        return isEarned ? <TrophySolid className={iconClass} /> : <TrophyIcon className={iconClass} />;\n    }\n  };\n\n  const getRarityColor = (rarity: string) => {\n    const colors = {\n      common: 'border-gray-300 bg-gray-50',\n      rare: 'border-blue-300 bg-blue-50',\n      epic: 'border-purple-300 bg-purple-50',\n      legendary: 'border-yellow-300 bg-yellow-50'\n    };\n    return colors[rarity as keyof typeof colors] || colors.common;\n  };\n\n  const getRarityBadgeColor = (rarity: string) => {\n    const colors = {\n      common: 'bg-gray-100 text-gray-800',\n      rare: 'bg-blue-100 text-blue-800',\n      epic: 'bg-purple-100 text-purple-800',\n      legendary: 'bg-yellow-100 text-yellow-800'\n    };\n    return colors[rarity as keyof typeof colors] || colors.common;\n  };\n\n  const isAchievementEarned = (achievementId: number): boolean => {\n    return userAchievements.some(ua => ua.achievement.id === achievementId);\n  };\n\n  const getAchievementProgress = (achievement: Achievement): AchievementProgress | null => {\n    return achievementProgress[achievement.id] || null;\n  };\n\n  const formatTimeAgo = (dateString: string): string => {\n    const now = new Date();\n    const date = new Date(dateString);\n    const diffInHours = Math.floor((now.getTime() - date.getTime()) / (1000 * 60 * 60));\n    \n    if (diffInHours < 24) return `${diffInHours}h atrás`;\n    const days = Math.floor(diffInHours / 24);\n    return `${days}d atrás`;\n  };\n\n  const filteredAchievements = achievements.filter(achievement => {\n    const categoryMatch = selectedCategory === 'all' || achievement.achievement_type === selectedCategory;\n    const rarityMatch = selectedRarity === 'all' || achievement.rarity === selectedRarity;\n    return categoryMatch && rarityMatch;\n  });\n\n  const earnedCount = userAchievements.length;\n  const totalXPFromAchievements = userAchievements.reduce((sum, ua) => sum + ua.achievement.xp_reward, 0);\n  const totalCoinsFromAchievements = userAchievements.reduce((sum, ua) => sum + ua.achievement.coin_reward, 0);\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"bg-gradient-to-r from-yellow-500 to-orange-500 rounded-2xl p-6 text-white\">\n        <h1 className=\"text-3xl font-bold\">Conquistas</h1>\n        <p className=\"text-yellow-100 mt-2\">\n          Desbloqueie conquistas e ganhe recompensas por seus estudos\n        </p>\n      </div>\n\n      {/* Stats Overview */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"card card-hover\">\n          <div className=\"flex items-center\">\n            <div className=\"bg-yellow-100 p-3 rounded-xl\">\n              <TrophyIcon className=\"h-6 w-6 text-yellow-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-600\">Conquistas</p>\n              <p className=\"text-2xl font-bold text-gray-900\">\n                {earnedCount} / {achievements.length}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card card-hover\">\n          <div className=\"flex items-center\">\n            <div className=\"bg-blue-100 p-3 rounded-xl\">\n              <StarIcon className=\"h-6 w-6 text-blue-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-600\">XP das Conquistas</p>\n              <p className=\"text-2xl font-bold text-gray-900\">{totalXPFromAchievements}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card card-hover\">\n          <div className=\"flex items-center\">\n            <div className=\"bg-green-100 p-3 rounded-xl\">\n              <CurrencyDollarIcon className=\"h-6 w-6 text-green-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-600\">Moedas das Conquistas</p>\n              <p className=\"text-2xl font-bold text-gray-900\">{totalCoinsFromAchievements}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card card-hover\">\n          <div className=\"flex items-center\">\n            <div className=\"bg-purple-100 p-3 rounded-xl\">\n              <ChartBarIcon className=\"h-6 w-6 text-purple-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-600\">Progresso</p>\n              <p className=\"text-2xl font-bold text-gray-900\">\n                {Math.round((earnedCount / achievements.length) * 100)}%\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"card\">\n        <div className=\"p-4\">\n          <div className=\"flex flex-col lg:flex-row gap-4\">\n            {/* Category Filter */}\n            <div className=\"flex-1\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Categoria\n              </label>\n              <div className=\"flex flex-wrap gap-2\">\n                {categories.map(category => {\n                  const IconComponent = category.icon;\n                  return (\n                    <button\n                      key={category.id}\n                      onClick={() => setSelectedCategory(category.id)}\n                      className={`flex items-center px-3 py-2 rounded-lg text-sm font-medium transition-colors ${\n                        selectedCategory === category.id\n                          ? 'bg-primary-600 text-white'\n                          : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                      }`}\n                    >\n                      <IconComponent className=\"h-4 w-4 mr-2\" />\n                      {category.name}\n                    </button>\n                  );\n                })}\n              </div>\n            </div>\n\n            {/* Rarity Filter */}\n            <div className=\"lg:w-48\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Raridade\n              </label>\n              <select\n                className=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\n                value={selectedRarity}\n                onChange={(e) => setSelectedRarity(e.target.value)}\n              >\n                {rarities.map(rarity => (\n                  <option key={rarity.id} value={rarity.id}>\n                    {rarity.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Achievements Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {filteredAchievements.map(achievement => {\n          const isEarned = isAchievementEarned(achievement.id);\n          const progress = getAchievementProgress(achievement);\n          const earnedData = userAchievements.find(ua => ua.achievement.id === achievement.id);\n\n          return (\n            <div\n              key={achievement.id}\n              className={`card relative overflow-hidden ${\n                isEarned ? getRarityColor(achievement.rarity) : 'border-gray-200 bg-gray-50'\n              } ${isEarned ? 'shadow-lg' : ''}`}\n            >\n              {/* Rarity Badge */}\n              <div className=\"absolute top-4 right-4\">\n                <span className={`px-2 py-1 rounded-md text-xs font-medium ${getRarityBadgeColor(achievement.rarity)}`}>\n                  {rarities.find(r => r.id === achievement.rarity)?.name || 'Comum'}\n                </span>\n              </div>\n\n              {/* Lock/Earned Badge */}\n              {!isEarned && (\n                <div className=\"absolute top-4 left-4\">\n                  <LockClosedIcon className=\"h-5 w-5 text-gray-400\" />\n                </div>\n              )}\n\n              <div className=\"p-6\">\n                {/* Achievement Icon and Title */}\n                <div className=\"text-center mb-4\">\n                  <div className={`inline-flex items-center justify-center w-16 h-16 rounded-full mb-3 ${\n                    isEarned ? 'bg-yellow-100' : 'bg-gray-200'\n                  }`}>\n                    {getAchievementIcon(achievement.icon, isEarned)}\n                  </div>\n                  <h3 className={`text-lg font-bold ${isEarned ? 'text-gray-900' : 'text-gray-600'}`}>\n                    {achievement.title}\n                  </h3>\n                  <p className={`text-sm mt-1 ${isEarned ? 'text-gray-700' : 'text-gray-500'}`}>\n                    {achievement.description}\n                  </p>\n                </div>\n\n                {/* Progress Bar (for unearned achievements) */}\n                {!isEarned && progress && (\n                  <div className=\"mb-4\">\n                    <div className=\"flex justify-between text-sm text-gray-600 mb-2\">\n                      <span>Progresso</span>\n                      <span>{progress.current_progress} / {progress.total_required}</span>\n                    </div>\n                    <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                      <div \n                        className=\"bg-primary-600 h-2 rounded-full transition-all duration-300\"\n                        style={{ width: `${progress.percentage}%` }}\n                      ></div>\n                    </div>\n                    <p className=\"text-xs text-gray-500 mt-1 text-center\">\n                      {progress.percentage}% completo\n                    </p>\n                  </div>\n                )}\n\n                {/* Earned Date */}\n                {isEarned && earnedData && (\n                  <div className=\"mb-4 text-center\">\n                    <div className=\"flex items-center justify-center text-sm text-green-600\">\n                      <CheckCircleIcon className=\"h-4 w-4 mr-1\" />\n                      <span>Conquistado {formatTimeAgo(earnedData.earned_at)}</span>\n                    </div>\n                  </div>\n                )}\n\n                {/* Rewards */}\n                <div className=\"flex items-center justify-center space-x-4 text-sm\">\n                  <div className=\"flex items-center\">\n                    <StarIcon className=\"h-4 w-4 text-yellow-500 mr-1\" />\n                    <span className={isEarned ? 'text-gray-700' : 'text-gray-500'}>\n                      {achievement.xp_reward} XP\n                    </span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <CurrencyDollarIcon className=\"h-4 w-4 text-green-500 mr-1\" />\n                    <span className={isEarned ? 'text-gray-700' : 'text-gray-500'}>\n                      {achievement.coin_reward} moedas\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Empty State */}\n      {filteredAchievements.length === 0 && (\n        <div className=\"text-center py-12\">\n          <TrophyIcon className=\"h-16 w-16 text-gray-400 mx-auto mb-4\" />\n          <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n            Nenhuma conquista encontrada\n          </h3>\n          <p className=\"text-gray-600\">\n            Tente ajustar os filtros para ver diferentes conquistas.\n          </p>\n        </div>\n      )}\n\n      {/* Recent Achievements */}\n      {userAchievements.length > 0 && (\n        <div className=\"card\">\n          <div className=\"p-6\">\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Conquistas Recentes</h2>\n            <div className=\"space-y-4\">\n              {userAchievements.slice(0, 3).map(userAchievement => (\n                <div key={userAchievement.id} className=\"flex items-center p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n                  <div className=\"flex-shrink-0\">\n                    {getAchievementIcon(userAchievement.achievement.icon, true)}\n                  </div>\n                  <div className=\"ml-4 flex-1\">\n                    <h4 className=\"font-semibold text-gray-900\">\n                      {userAchievement.achievement.title}\n                    </h4>\n                    <p className=\"text-sm text-gray-600\">\n                      {userAchievement.achievement.description}\n                    </p>\n                  </div>\n                  <div className=\"flex items-center text-sm text-gray-500\">\n                    <ClockIcon className=\"h-4 w-4 mr-1\" />\n                    {formatTimeAgo(userAchievement.earned_at)}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Achievements; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}