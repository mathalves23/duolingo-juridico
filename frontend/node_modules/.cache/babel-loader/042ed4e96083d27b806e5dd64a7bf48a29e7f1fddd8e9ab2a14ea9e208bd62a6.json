{"ast":null,"code":"var _jsxFileName = \"/Users/mdearaujo/Documents/Projetos/git/duolingo-juridico/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport apiService from '../services/api';\n\n// Tipos para o contexto de autenticação\n\n// Ações do reducer\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Estado inicial\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  loading: {\n    isLoading: false,\n    error: null\n  }\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: {\n          isLoading: action.payload.isLoading,\n          error: action.payload.error || null\n        }\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        loading: {\n          isLoading: false,\n          error: null\n        }\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        loading: {\n          isLoading: false,\n          error: null\n        }\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: state.user ? {\n          ...state.user,\n          ...action.payload\n        } : null\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        loading: {\n          isLoading: false,\n          error: action.payload\n        }\n      };\n    default:\n      return state;\n  }\n};\n\n// Contexto\nconst AuthContext = /*#__PURE__*/createContext(undefined);\n\n// Provider\n\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Verificar autenticação no carregamento da aplicação\n  useEffect(() => {\n    checkAuth();\n  }, []);\n  const checkAuth = async () => {\n    const token = localStorage.getItem('access_token');\n    if (!token) {\n      // Se não há token, não faz login automaticamente\n      dispatch({\n        type: 'LOGOUT'\n      });\n      return;\n    }\n    dispatch({\n      type: 'SET_LOADING',\n      payload: {\n        isLoading: true\n      }\n    });\n    try {\n      // Para modo demo/desenvolvimento, use dados mock\n      const mockUser = {\n        id: 1,\n        username: 'demo',\n        email: 'demo@duolingojuridico.com',\n        first_name: 'Estudante',\n        last_name: 'Demo',\n        is_verified: true,\n        created_at: new Date().toISOString(),\n        profile: {\n          id: 1,\n          bio: 'Estudante de Direito determinado!',\n          date_of_birth: null,\n          phone_number: '',\n          preferred_study_time: 'evening',\n          target_exam: 'OAB',\n          experience_level: 'intermediate',\n          study_goals: 'Passar na OAB',\n          xp_points: 2850,\n          coins: 450,\n          current_streak: 12,\n          best_streak: 15,\n          total_study_time: 1440,\n          avatar: null\n        }\n      };\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: mockUser\n      });\n    } catch (error) {\n      console.error('Erro ao verificar autenticação:', error);\n      dispatch({\n        type: 'LOGOUT'\n      });\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n    }\n  };\n  const login = async credentials => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: {\n        isLoading: true\n      }\n    });\n    try {\n      // Modo demo - aceita qualquer usuário/senha\n      if (credentials.username && credentials.password) {\n        // Simular dados de resposta\n        const mockUser = {\n          id: 1,\n          username: credentials.username,\n          email: 'demo@duolingojuridico.com',\n          first_name: 'Estudante',\n          last_name: 'Demo',\n          is_verified: true,\n          created_at: new Date().toISOString(),\n          profile: {\n            id: 1,\n            bio: 'Estudante de Direito determinado!',\n            date_of_birth: null,\n            phone_number: '',\n            preferred_study_time: 'evening',\n            target_exam: 'OAB',\n            experience_level: 'intermediate',\n            study_goals: 'Passar na OAB',\n            xp_points: 2850,\n            coins: 450,\n            current_streak: 12,\n            best_streak: 15,\n            total_study_time: 1440,\n            avatar: null\n          }\n        };\n\n        // Salvar token demo no localStorage\n        localStorage.setItem('access_token', 'demo_token_' + Date.now());\n        localStorage.setItem('refresh_token', 'demo_refresh_' + Date.now());\n        dispatch({\n          type: 'LOGIN_SUCCESS',\n          payload: mockUser\n        });\n      } else {\n        throw new Error('Usuário e senha são obrigatórios');\n      }\n    } catch (error) {\n      const errorMessage = error.message || 'Erro ao fazer login. Verifique suas credenciais.';\n      dispatch({\n        type: 'SET_ERROR',\n        payload: errorMessage\n      });\n      throw error;\n    }\n  };\n  const register = async userData => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: {\n        isLoading: true\n      }\n    });\n    try {\n      const response = await apiService.register(userData);\n\n      // Salvar tokens no localStorage\n      localStorage.setItem('access_token', response.tokens.access);\n      localStorage.setItem('refresh_token', response.tokens.refresh);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: response.user\n      });\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data, _error$response3, _error$response3$data, _error$response3$data2;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : (_error$response3$data2 = _error$response3$data.non_field_errors) === null || _error$response3$data2 === void 0 ? void 0 : _error$response3$data2[0]) || 'Erro ao criar conta. Tente novamente.';\n      dispatch({\n        type: 'SET_ERROR',\n        payload: errorMessage\n      });\n      throw error;\n    }\n  };\n  const logout = async () => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: {\n        isLoading: true\n      }\n    });\n    try {\n      await apiService.logout();\n    } catch (error) {\n      console.error('Erro ao fazer logout:', error);\n    } finally {\n      dispatch({\n        type: 'LOGOUT'\n      });\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n    }\n  };\n  const updateUser = userData => {\n    dispatch({\n      type: 'UPDATE_USER',\n      payload: userData\n    });\n  };\n  const contextValue = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateUser,\n    checkAuth\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook personalizado para usar o contexto\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","apiService","jsxDEV","_jsxDEV","initialState","user","isAuthenticated","loading","isLoading","error","authReducer","state","action","type","payload","AuthContext","undefined","AuthProvider","children","_s","dispatch","checkAuth","token","localStorage","getItem","mockUser","id","username","email","first_name","last_name","is_verified","created_at","Date","toISOString","profile","bio","date_of_birth","phone_number","preferred_study_time","target_exam","experience_level","study_goals","xp_points","coins","current_streak","best_streak","total_study_time","avatar","console","removeItem","login","credentials","password","setItem","now","Error","errorMessage","message","register","userData","response","tokens","access","refresh","_error$response","_error$response$data","_error$response2","_error$response2$data","_error$response3","_error$response3$data","_error$response3$data2","data","detail","non_field_errors","logout","updateUser","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["/Users/mdearaujo/Documents/Projetos/git/duolingo-juridico/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\nimport { User, AuthResponse, LoginRequest, RegisterRequest, LoadingState } from '../types';\nimport apiService from '../services/api';\n\n// Tipos para o contexto de autenticação\ninterface AuthState {\n  user: User | null;\n  isAuthenticated: boolean;\n  loading: LoadingState;\n}\n\ninterface AuthContextType extends AuthState {\n  login: (credentials: LoginRequest) => Promise<void>;\n  register: (userData: RegisterRequest) => Promise<void>;\n  logout: () => void;\n  updateUser: (userData: Partial<User>) => void;\n  checkAuth: () => Promise<void>;\n}\n\n// Ações do reducer\ntype AuthAction =\n  | { type: 'SET_LOADING'; payload: { isLoading: boolean; error?: string | null } }\n  | { type: 'LOGIN_SUCCESS'; payload: User }\n  | { type: 'LOGOUT' }\n  | { type: 'UPDATE_USER'; payload: Partial<User> }\n  | { type: 'SET_ERROR'; payload: string };\n\n// Estado inicial\nconst initialState: AuthState = {\n  user: null,\n  isAuthenticated: false,\n  loading: {\n    isLoading: false,\n    error: null,\n  },\n};\n\n// Reducer\nconst authReducer = (state: AuthState, action: AuthAction): AuthState => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: {\n          isLoading: action.payload.isLoading,\n          error: action.payload.error || null,\n        },\n      };\n\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        loading: {\n          isLoading: false,\n          error: null,\n        },\n      };\n\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        loading: {\n          isLoading: false,\n          error: null,\n        },\n      };\n\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: state.user ? { ...state.user, ...action.payload } : null,\n      };\n\n    case 'SET_ERROR':\n      return {\n        ...state,\n        loading: {\n          isLoading: false,\n          error: action.payload,\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\n// Contexto\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Provider\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Verificar autenticação no carregamento da aplicação\n  useEffect(() => {\n    checkAuth();\n  }, []);\n\n  const checkAuth = async () => {\n    const token = localStorage.getItem('access_token');\n    \n    if (!token) {\n      // Se não há token, não faz login automaticamente\n      dispatch({ type: 'LOGOUT' });\n      return;\n    }\n\n    dispatch({ type: 'SET_LOADING', payload: { isLoading: true } });\n\n    try {\n      // Para modo demo/desenvolvimento, use dados mock\n      const mockUser: User = {\n        id: 1,\n        username: 'demo',\n        email: 'demo@duolingojuridico.com',\n        first_name: 'Estudante',\n        last_name: 'Demo',\n        is_verified: true,\n        created_at: new Date().toISOString(),\n        profile: {\n          id: 1,\n          bio: 'Estudante de Direito determinado!',\n          date_of_birth: null,\n          phone_number: '',\n          preferred_study_time: 'evening',\n          target_exam: 'OAB',\n          experience_level: 'intermediate',\n          study_goals: 'Passar na OAB',\n          xp_points: 2850,\n          coins: 450,\n          current_streak: 12,\n          best_streak: 15,\n          total_study_time: 1440,\n          avatar: null,\n        }\n      };\n      \n      dispatch({ type: 'LOGIN_SUCCESS', payload: mockUser });\n    } catch (error) {\n      console.error('Erro ao verificar autenticação:', error);\n      dispatch({ type: 'LOGOUT' });\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n    }\n  };\n\n  const login = async (credentials: LoginRequest) => {\n    dispatch({ type: 'SET_LOADING', payload: { isLoading: true } });\n\n    try {\n      // Modo demo - aceita qualquer usuário/senha\n      if (credentials.username && credentials.password) {\n        // Simular dados de resposta\n        const mockUser: User = {\n          id: 1,\n          username: credentials.username,\n          email: 'demo@duolingojuridico.com',\n          first_name: 'Estudante',\n          last_name: 'Demo',\n          is_verified: true,\n          created_at: new Date().toISOString(),\n          profile: {\n            id: 1,\n            bio: 'Estudante de Direito determinado!',\n            date_of_birth: null,\n            phone_number: '',\n            preferred_study_time: 'evening',\n            target_exam: 'OAB',\n            experience_level: 'intermediate',\n            study_goals: 'Passar na OAB',\n            xp_points: 2850,\n            coins: 450,\n            current_streak: 12,\n            best_streak: 15,\n            total_study_time: 1440,\n            avatar: null,\n          }\n        };\n        \n        // Salvar token demo no localStorage\n        localStorage.setItem('access_token', 'demo_token_' + Date.now());\n        localStorage.setItem('refresh_token', 'demo_refresh_' + Date.now());\n        \n        dispatch({ type: 'LOGIN_SUCCESS', payload: mockUser });\n      } else {\n        throw new Error('Usuário e senha são obrigatórios');\n      }\n    } catch (error: any) {\n      const errorMessage = error.message || 'Erro ao fazer login. Verifique suas credenciais.';\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      throw error;\n    }\n  };\n\n  const register = async (userData: RegisterRequest) => {\n    dispatch({ type: 'SET_LOADING', payload: { isLoading: true } });\n\n    try {\n      const response: AuthResponse = await apiService.register(userData);\n      \n      // Salvar tokens no localStorage\n      localStorage.setItem('access_token', response.tokens.access);\n      localStorage.setItem('refresh_token', response.tokens.refresh);\n      \n      dispatch({ type: 'LOGIN_SUCCESS', payload: response.user });\n    } catch (error: any) {\n      const errorMessage = error.response?.data?.message || \n                          error.response?.data?.detail ||\n                          error.response?.data?.non_field_errors?.[0] ||\n                          'Erro ao criar conta. Tente novamente.';\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    dispatch({ type: 'SET_LOADING', payload: { isLoading: true } });\n\n    try {\n      await apiService.logout();\n    } catch (error) {\n      console.error('Erro ao fazer logout:', error);\n    } finally {\n      dispatch({ type: 'LOGOUT' });\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n    }\n  };\n\n  const updateUser = (userData: Partial<User>) => {\n    dispatch({ type: 'UPDATE_USER', payload: userData });\n  };\n\n  const contextValue: AuthContextType = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateUser,\n    checkAuth,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Hook personalizado para usar o contexto\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  \n  if (context === undefined) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  \n  return context;\n};\n\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}