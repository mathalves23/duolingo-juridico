{"ast":null,"code":"import _objectSpread from\"/Users/mdearaujo/Documents/Projetos/git/duolingo-juridico/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer,useEffect}from'react';import apiService from'../services/api';// Tipos para o contexto de autenticação\n// Ações do reducer\nimport{jsx as _jsx}from\"react/jsx-runtime\";// Estado inicial\nconst initialState={user:null,isAuthenticated:false,loading:{isLoading:false,error:null}};// Reducer\nconst authReducer=(state,action)=>{switch(action.type){case'SET_LOADING':return _objectSpread(_objectSpread({},state),{},{loading:{isLoading:action.payload.isLoading,error:action.payload.error||null}});case'LOGIN_SUCCESS':return _objectSpread(_objectSpread({},state),{},{user:action.payload,isAuthenticated:true,loading:{isLoading:false,error:null}});case'LOGOUT':return _objectSpread(_objectSpread({},state),{},{user:null,isAuthenticated:false,loading:{isLoading:false,error:null}});case'UPDATE_USER':return _objectSpread(_objectSpread({},state),{},{user:state.user?_objectSpread(_objectSpread({},state.user),action.payload):null});case'SET_ERROR':return _objectSpread(_objectSpread({},state),{},{loading:{isLoading:false,error:action.payload}});default:return state;}};// Contexto\nconst AuthContext=/*#__PURE__*/createContext(undefined);// Provider\nexport const AuthProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(authReducer,initialState);// Verificar autenticação no carregamento da aplicação\nuseEffect(()=>{checkAuth();},[]);const checkAuth=async()=>{const token=localStorage.getItem('access_token');if(!token){dispatch({type:'LOGOUT'});return;}dispatch({type:'SET_LOADING',payload:{isLoading:true}});try{const user=await apiService.getCurrentUser();dispatch({type:'LOGIN_SUCCESS',payload:user});}catch(error){console.error('Erro ao verificar autenticação:',error);dispatch({type:'LOGOUT'});localStorage.removeItem('access_token');localStorage.removeItem('refresh_token');}};const login=async credentials=>{dispatch({type:'SET_LOADING',payload:{isLoading:true}});try{const response=await apiService.login(credentials);// Salvar tokens no localStorage\nlocalStorage.setItem('access_token',response.tokens.access);localStorage.setItem('refresh_token',response.tokens.refresh);dispatch({type:'LOGIN_SUCCESS',payload:response.user});}catch(error){var _error$response,_error$response$data,_error$response2,_error$response2$data,_error$response3,_error$response3$data,_error$response3$data2;const errorMessage=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.detail)||((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:(_error$response3$data2=_error$response3$data.non_field_errors)===null||_error$response3$data2===void 0?void 0:_error$response3$data2[0])||'Erro ao fazer login. Verifique suas credenciais.';dispatch({type:'SET_ERROR',payload:errorMessage});throw error;}};const register=async userData=>{dispatch({type:'SET_LOADING',payload:{isLoading:true}});try{const response=await apiService.register(userData);// Salvar tokens no localStorage\nlocalStorage.setItem('access_token',response.tokens.access);localStorage.setItem('refresh_token',response.tokens.refresh);dispatch({type:'LOGIN_SUCCESS',payload:response.user});}catch(error){var _error$response4,_error$response4$data,_error$response5,_error$response5$data,_error$response6,_error$response6$data,_error$response6$data2;const errorMessage=((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.detail)||((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:(_error$response6$data2=_error$response6$data.non_field_errors)===null||_error$response6$data2===void 0?void 0:_error$response6$data2[0])||'Erro ao criar conta. Tente novamente.';dispatch({type:'SET_ERROR',payload:errorMessage});throw error;}};const logout=async()=>{dispatch({type:'SET_LOADING',payload:{isLoading:true}});try{await apiService.logout();}catch(error){console.error('Erro ao fazer logout:',error);}finally{dispatch({type:'LOGOUT'});localStorage.removeItem('access_token');localStorage.removeItem('refresh_token');}};const updateUser=userData=>{dispatch({type:'UPDATE_USER',payload:userData});};const contextValue=_objectSpread(_objectSpread({},state),{},{login,register,logout,updateUser,checkAuth});return/*#__PURE__*/_jsx(AuthContext.Provider,{value:contextValue,children:children});};// Hook personalizado para usar o contexto\nexport const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth deve ser usado dentro de um AuthProvider');}return context;};export default AuthContext;","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","apiService","jsx","_jsx","initialState","user","isAuthenticated","loading","isLoading","error","authReducer","state","action","type","_objectSpread","payload","AuthContext","undefined","AuthProvider","_ref","children","dispatch","checkAuth","token","localStorage","getItem","getCurrentUser","console","removeItem","login","credentials","response","setItem","tokens","access","refresh","_error$response","_error$response$data","_error$response2","_error$response2$data","_error$response3","_error$response3$data","_error$response3$data2","errorMessage","data","message","detail","non_field_errors","register","userData","_error$response4","_error$response4$data","_error$response5","_error$response5$data","_error$response6","_error$response6$data","_error$response6$data2","logout","updateUser","contextValue","Provider","value","useAuth","context","Error"],"sources":["/Users/mdearaujo/Documents/Projetos/git/duolingo-juridico/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\nimport { User, AuthResponse, LoginRequest, RegisterRequest, LoadingState } from '../types';\nimport apiService from '../services/api';\n\n// Tipos para o contexto de autenticação\ninterface AuthState {\n  user: User | null;\n  isAuthenticated: boolean;\n  loading: LoadingState;\n}\n\ninterface AuthContextType extends AuthState {\n  login: (credentials: LoginRequest) => Promise<void>;\n  register: (userData: RegisterRequest) => Promise<void>;\n  logout: () => void;\n  updateUser: (userData: Partial<User>) => void;\n  checkAuth: () => Promise<void>;\n}\n\n// Ações do reducer\ntype AuthAction =\n  | { type: 'SET_LOADING'; payload: { isLoading: boolean; error?: string | null } }\n  | { type: 'LOGIN_SUCCESS'; payload: User }\n  | { type: 'LOGOUT' }\n  | { type: 'UPDATE_USER'; payload: Partial<User> }\n  | { type: 'SET_ERROR'; payload: string };\n\n// Estado inicial\nconst initialState: AuthState = {\n  user: null,\n  isAuthenticated: false,\n  loading: {\n    isLoading: false,\n    error: null,\n  },\n};\n\n// Reducer\nconst authReducer = (state: AuthState, action: AuthAction): AuthState => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: {\n          isLoading: action.payload.isLoading,\n          error: action.payload.error || null,\n        },\n      };\n\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        loading: {\n          isLoading: false,\n          error: null,\n        },\n      };\n\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        loading: {\n          isLoading: false,\n          error: null,\n        },\n      };\n\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: state.user ? { ...state.user, ...action.payload } : null,\n      };\n\n    case 'SET_ERROR':\n      return {\n        ...state,\n        loading: {\n          isLoading: false,\n          error: action.payload,\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\n// Contexto\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Provider\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Verificar autenticação no carregamento da aplicação\n  useEffect(() => {\n    checkAuth();\n  }, []);\n\n  const checkAuth = async () => {\n    const token = localStorage.getItem('access_token');\n    \n    if (!token) {\n      dispatch({ type: 'LOGOUT' });\n      return;\n    }\n\n    dispatch({ type: 'SET_LOADING', payload: { isLoading: true } });\n\n    try {\n      const user = await apiService.getCurrentUser();\n      dispatch({ type: 'LOGIN_SUCCESS', payload: user });\n    } catch (error) {\n      console.error('Erro ao verificar autenticação:', error);\n      dispatch({ type: 'LOGOUT' });\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n    }\n  };\n\n  const login = async (credentials: LoginRequest) => {\n    dispatch({ type: 'SET_LOADING', payload: { isLoading: true } });\n\n    try {\n      const response: AuthResponse = await apiService.login(credentials);\n      \n      // Salvar tokens no localStorage\n      localStorage.setItem('access_token', response.tokens.access);\n      localStorage.setItem('refresh_token', response.tokens.refresh);\n      \n      dispatch({ type: 'LOGIN_SUCCESS', payload: response.user });\n    } catch (error: any) {\n      const errorMessage = error.response?.data?.message || \n                          error.response?.data?.detail || \n                          error.response?.data?.non_field_errors?.[0] ||\n                          'Erro ao fazer login. Verifique suas credenciais.';\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      throw error;\n    }\n  };\n\n  const register = async (userData: RegisterRequest) => {\n    dispatch({ type: 'SET_LOADING', payload: { isLoading: true } });\n\n    try {\n      const response: AuthResponse = await apiService.register(userData);\n      \n      // Salvar tokens no localStorage\n      localStorage.setItem('access_token', response.tokens.access);\n      localStorage.setItem('refresh_token', response.tokens.refresh);\n      \n      dispatch({ type: 'LOGIN_SUCCESS', payload: response.user });\n    } catch (error: any) {\n      const errorMessage = error.response?.data?.message || \n                          error.response?.data?.detail ||\n                          error.response?.data?.non_field_errors?.[0] ||\n                          'Erro ao criar conta. Tente novamente.';\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    dispatch({ type: 'SET_LOADING', payload: { isLoading: true } });\n\n    try {\n      await apiService.logout();\n    } catch (error) {\n      console.error('Erro ao fazer logout:', error);\n    } finally {\n      dispatch({ type: 'LOGOUT' });\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n    }\n  };\n\n  const updateUser = (userData: Partial<User>) => {\n    dispatch({ type: 'UPDATE_USER', payload: userData });\n  };\n\n  const contextValue: AuthContextType = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateUser,\n    checkAuth,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Hook personalizado para usar o contexto\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  \n  if (context === undefined) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  \n  return context;\n};\n\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}