{"ast":null,"code":"var _jsxFileName = \"/Users/mdearaujo/Documents/Projetos/git/duolingo-juridico/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\n\n// Tipos para o contexto de autenticação\n\n// Ações do reducer\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Estado inicial\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  loading: {\n    isLoading: true,\n    error: null\n  }\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: {\n          isLoading: action.payload.isLoading,\n          error: action.payload.error || null\n        }\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        loading: {\n          isLoading: false,\n          error: null\n        }\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        loading: {\n          isLoading: false,\n          error: null\n        }\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: state.user ? {\n          ...state.user,\n          ...action.payload\n        } : null\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        loading: {\n          isLoading: false,\n          error: action.payload\n        }\n      };\n    default:\n      return state;\n  }\n};\n\n// Contexto\nconst AuthContext = /*#__PURE__*/createContext(undefined);\n\n// Provider\n\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Verificar autenticação no carregamento da aplicação\n  useEffect(() => {\n    checkAuth();\n  }, []);\n  const checkAuth = async () => {\n    const token = localStorage.getItem('access_token');\n    if (!token) {\n      // Se não há token, finaliza o carregamento e desloga\n      dispatch({\n        type: 'SET_LOADING',\n        payload: {\n          isLoading: false\n        }\n      });\n      dispatch({\n        type: 'LOGOUT'\n      });\n      return;\n    }\n\n    // Se existe token, reconstroi o usuário com dados mock\n    try {\n      const storedUsername = localStorage.getItem('user_username') || 'demo';\n      const storedFirstName = localStorage.getItem('user_first_name') || 'Estudante';\n      const storedLastName = localStorage.getItem('user_last_name') || 'Demo';\n      const storedEmail = localStorage.getItem('user_email') || 'demo@duolingojuridico.com';\n      const isAdmin = localStorage.getItem('user_role') === 'admin';\n      const mockUser = {\n        id: 1,\n        username: storedUsername,\n        email: storedEmail,\n        first_name: storedFirstName,\n        last_name: storedLastName,\n        is_verified: true,\n        created_at: new Date().toISOString(),\n        profile: {\n          id: 1,\n          bio: isAdmin ? 'Administrador do Sistema' : 'Estudante de Direito determinado!',\n          date_of_birth: null,\n          phone_number: '',\n          preferred_study_time: 'evening',\n          target_exam: 'OAB',\n          experience_level: isAdmin ? 'advanced' : 'intermediate',\n          study_goals: isAdmin ? 'Gerenciar a plataforma' : 'Passar na OAB',\n          xp_points: isAdmin ? 10000 : 2850,\n          coins: isAdmin ? 9999 : 450,\n          current_streak: isAdmin ? 100 : 12,\n          best_streak: isAdmin ? 150 : 15,\n          total_study_time: isAdmin ? 10000 : 1440,\n          avatar: null\n        }\n      };\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: mockUser\n      });\n    } catch (error) {\n      console.error('Erro ao verificar autenticação:', error);\n      dispatch({\n        type: 'LOGOUT'\n      });\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      localStorage.removeItem('user_username');\n      localStorage.removeItem('user_first_name');\n      localStorage.removeItem('user_last_name');\n      localStorage.removeItem('user_email');\n      localStorage.removeItem('user_role');\n    }\n  };\n  const login = async credentials => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: {\n        isLoading: true\n      }\n    });\n    try {\n      // Modo demo - aceita qualquer usuário/senha, com verificação especial para admin\n      if (credentials.username && credentials.password) {\n        // Verificar se são credenciais de admin\n        const isAdmin = credentials.username === 'admin' && credentials.password === 'admin123';\n\n        // Simular dados de resposta\n        const mockUser = {\n          id: isAdmin ? 999 : 1,\n          username: credentials.username,\n          email: isAdmin ? 'admin@duolingojuridico.com' : 'demo@duolingojuridico.com',\n          first_name: isAdmin ? 'Administrador' : 'Estudante',\n          last_name: isAdmin ? 'Sistema' : 'Demo',\n          is_verified: true,\n          created_at: new Date().toISOString(),\n          profile: {\n            id: 1,\n            bio: isAdmin ? 'Administrador do Sistema' : 'Estudante de Direito determinado!',\n            date_of_birth: null,\n            phone_number: '',\n            preferred_study_time: 'evening',\n            target_exam: 'OAB',\n            experience_level: isAdmin ? 'advanced' : 'intermediate',\n            study_goals: isAdmin ? 'Gerenciar a plataforma' : 'Passar na OAB',\n            xp_points: isAdmin ? 10000 : 2850,\n            coins: isAdmin ? 9999 : 450,\n            current_streak: isAdmin ? 100 : 12,\n            best_streak: isAdmin ? 150 : 15,\n            total_study_time: isAdmin ? 10000 : 1440,\n            avatar: null\n          }\n        };\n\n        // Salvar dados no localStorage para persistência\n        localStorage.setItem('access_token', 'demo_token_' + Date.now());\n        localStorage.setItem('refresh_token', 'demo_refresh_' + Date.now());\n        localStorage.setItem('user_username', mockUser.username);\n        localStorage.setItem('user_first_name', mockUser.first_name);\n        localStorage.setItem('user_last_name', mockUser.last_name);\n        localStorage.setItem('user_email', mockUser.email);\n        localStorage.setItem('user_role', isAdmin ? 'admin' : 'user');\n        dispatch({\n          type: 'LOGIN_SUCCESS',\n          payload: mockUser\n        });\n      } else {\n        throw new Error('Usuário e senha são obrigatórios');\n      }\n    } catch (error) {\n      const errorMessage = error.message || 'Erro ao fazer login. Verifique suas credenciais.';\n      dispatch({\n        type: 'SET_ERROR',\n        payload: errorMessage\n      });\n      throw error;\n    }\n  };\n  const register = async userData => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: {\n        isLoading: true\n      }\n    });\n    try {\n      // Modo demo - criar conta com dados fornecidos\n      if (userData.username && userData.email && userData.password && userData.first_name && userData.last_name) {\n        // Simular dados de resposta\n        const mockUser = {\n          id: Math.floor(Math.random() * 1000) + 1,\n          username: userData.username,\n          email: userData.email,\n          first_name: userData.first_name,\n          last_name: userData.last_name,\n          is_verified: false,\n          created_at: new Date().toISOString(),\n          profile: {\n            id: 1,\n            bio: `Estudante de Direito - ${userData.first_name} ${userData.last_name}`,\n            date_of_birth: null,\n            phone_number: '',\n            preferred_study_time: 'evening',\n            target_exam: 'OAB',\n            experience_level: 'beginner',\n            study_goals: 'Passar na OAB',\n            xp_points: 0,\n            coins: 100,\n            current_streak: 0,\n            best_streak: 0,\n            total_study_time: 0,\n            avatar: null\n          }\n        };\n\n        // Salvar token demo no localStorage\n        localStorage.setItem('access_token', 'demo_token_' + Date.now());\n        localStorage.setItem('refresh_token', 'demo_refresh_' + Date.now());\n        localStorage.setItem('user_username', mockUser.username);\n        localStorage.setItem('user_first_name', mockUser.first_name);\n        localStorage.setItem('user_last_name', mockUser.last_name);\n        localStorage.setItem('user_email', mockUser.email);\n        localStorage.setItem('user_role', 'user');\n        dispatch({\n          type: 'LOGIN_SUCCESS',\n          payload: mockUser\n        });\n      } else {\n        throw new Error('Todos os campos são obrigatórios');\n      }\n    } catch (error) {\n      const errorMessage = error.message || 'Erro ao criar conta. Tente novamente.';\n      dispatch({\n        type: 'SET_ERROR',\n        payload: errorMessage\n      });\n      throw error;\n    }\n  };\n  const logout = async () => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: {\n        isLoading: true\n      }\n    });\n    try {\n      // Em produção, chamar a API de logout aqui\n      // await apiService.logout();\n    } catch (error) {\n      console.error('Erro ao fazer logout:', error);\n    } finally {\n      dispatch({\n        type: 'LOGOUT'\n      });\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      localStorage.removeItem('user_username');\n      localStorage.removeItem('user_first_name');\n      localStorage.removeItem('user_last_name');\n      localStorage.removeItem('user_email');\n      localStorage.removeItem('user_role');\n    }\n  };\n  const updateUser = userData => {\n    dispatch({\n      type: 'UPDATE_USER',\n      payload: userData\n    });\n  };\n  const contextValue = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateUser,\n    checkAuth\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook personalizado para usar o contexto\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","initialState","user","isAuthenticated","loading","isLoading","error","authReducer","state","action","type","payload","AuthContext","undefined","AuthProvider","children","_s","dispatch","checkAuth","token","localStorage","getItem","storedUsername","storedFirstName","storedLastName","storedEmail","isAdmin","mockUser","id","username","email","first_name","last_name","is_verified","created_at","Date","toISOString","profile","bio","date_of_birth","phone_number","preferred_study_time","target_exam","experience_level","study_goals","xp_points","coins","current_streak","best_streak","total_study_time","avatar","console","removeItem","login","credentials","password","setItem","now","Error","errorMessage","message","register","userData","Math","floor","random","logout","updateUser","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["/Users/mdearaujo/Documents/Projetos/git/duolingo-juridico/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\nimport { User, LoginRequest, RegisterRequest, LoadingState } from '../types';\n\n// Tipos para o contexto de autenticação\ninterface AuthState {\n  user: User | null;\n  isAuthenticated: boolean;\n  loading: LoadingState;\n}\n\ninterface AuthContextType extends AuthState {\n  login: (credentials: LoginRequest) => Promise<void>;\n  register: (userData: RegisterRequest) => Promise<void>;\n  logout: () => void;\n  updateUser: (userData: Partial<User>) => void;\n  checkAuth: () => Promise<void>;\n}\n\n// Ações do reducer\ntype AuthAction =\n  | { type: 'SET_LOADING'; payload: { isLoading: boolean; error?: string | null } }\n  | { type: 'LOGIN_SUCCESS'; payload: User }\n  | { type: 'LOGOUT' }\n  | { type: 'UPDATE_USER'; payload: Partial<User> }\n  | { type: 'SET_ERROR'; payload: string };\n\n// Estado inicial\nconst initialState: AuthState = {\n  user: null,\n  isAuthenticated: false,\n  loading: {\n    isLoading: true,\n    error: null,\n  },\n};\n\n// Reducer\nconst authReducer = (state: AuthState, action: AuthAction): AuthState => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: {\n          isLoading: action.payload.isLoading,\n          error: action.payload.error || null,\n        },\n      };\n\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        loading: {\n          isLoading: false,\n          error: null,\n        },\n      };\n\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        loading: {\n          isLoading: false,\n          error: null,\n        },\n      };\n\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: state.user ? { ...state.user, ...action.payload } : null,\n      };\n\n    case 'SET_ERROR':\n      return {\n        ...state,\n        loading: {\n          isLoading: false,\n          error: action.payload,\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\n// Contexto\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Provider\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Verificar autenticação no carregamento da aplicação\n  useEffect(() => {\n    checkAuth();\n  }, []);\n\n  const checkAuth = async () => {\n    const token = localStorage.getItem('access_token');\n    \n    if (!token) {\n      // Se não há token, finaliza o carregamento e desloga\n      dispatch({ type: 'SET_LOADING', payload: { isLoading: false } });\n      dispatch({ type: 'LOGOUT' });\n      return;\n    }\n\n    // Se existe token, reconstroi o usuário com dados mock\n    try {\n      const storedUsername = localStorage.getItem('user_username') || 'demo';\n      const storedFirstName = localStorage.getItem('user_first_name') || 'Estudante';\n      const storedLastName = localStorage.getItem('user_last_name') || 'Demo';\n      const storedEmail = localStorage.getItem('user_email') || 'demo@duolingojuridico.com';\n      const isAdmin = localStorage.getItem('user_role') === 'admin';\n      \n      const mockUser: User = {\n        id: 1,\n        username: storedUsername,\n        email: storedEmail,\n        first_name: storedFirstName,\n        last_name: storedLastName,\n        is_verified: true,\n        created_at: new Date().toISOString(),\n        profile: {\n          id: 1,\n          bio: isAdmin ? 'Administrador do Sistema' : 'Estudante de Direito determinado!',\n          date_of_birth: null,\n          phone_number: '',\n          preferred_study_time: 'evening',\n          target_exam: 'OAB',\n          experience_level: isAdmin ? 'advanced' : 'intermediate',\n          study_goals: isAdmin ? 'Gerenciar a plataforma' : 'Passar na OAB',\n          xp_points: isAdmin ? 10000 : 2850,\n          coins: isAdmin ? 9999 : 450,\n          current_streak: isAdmin ? 100 : 12,\n          best_streak: isAdmin ? 150 : 15,\n          total_study_time: isAdmin ? 10000 : 1440,\n          avatar: null,\n        }\n      };\n      \n      dispatch({ type: 'LOGIN_SUCCESS', payload: mockUser });\n    } catch (error) {\n      console.error('Erro ao verificar autenticação:', error);\n      dispatch({ type: 'LOGOUT' });\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      localStorage.removeItem('user_username');\n      localStorage.removeItem('user_first_name');\n      localStorage.removeItem('user_last_name');\n      localStorage.removeItem('user_email');\n      localStorage.removeItem('user_role');\n    }\n  };\n\n  const login = async (credentials: LoginRequest) => {\n    dispatch({ type: 'SET_LOADING', payload: { isLoading: true } });\n\n    try {\n      // Modo demo - aceita qualquer usuário/senha, com verificação especial para admin\n      if (credentials.username && credentials.password) {\n        // Verificar se são credenciais de admin\n        const isAdmin = credentials.username === 'admin' && credentials.password === 'admin123';\n        \n        // Simular dados de resposta\n        const mockUser: User = {\n          id: isAdmin ? 999 : 1,\n          username: credentials.username,\n          email: isAdmin ? 'admin@duolingojuridico.com' : 'demo@duolingojuridico.com',\n          first_name: isAdmin ? 'Administrador' : 'Estudante',\n          last_name: isAdmin ? 'Sistema' : 'Demo',\n          is_verified: true,\n          created_at: new Date().toISOString(),\n          profile: {\n            id: 1,\n            bio: isAdmin ? 'Administrador do Sistema' : 'Estudante de Direito determinado!',\n            date_of_birth: null,\n            phone_number: '',\n            preferred_study_time: 'evening',\n            target_exam: 'OAB',\n            experience_level: isAdmin ? 'advanced' : 'intermediate',\n            study_goals: isAdmin ? 'Gerenciar a plataforma' : 'Passar na OAB',\n            xp_points: isAdmin ? 10000 : 2850,\n            coins: isAdmin ? 9999 : 450,\n            current_streak: isAdmin ? 100 : 12,\n            best_streak: isAdmin ? 150 : 15,\n            total_study_time: isAdmin ? 10000 : 1440,\n            avatar: null,\n          }\n        };\n        \n        // Salvar dados no localStorage para persistência\n        localStorage.setItem('access_token', 'demo_token_' + Date.now());\n        localStorage.setItem('refresh_token', 'demo_refresh_' + Date.now());\n        localStorage.setItem('user_username', mockUser.username);\n        localStorage.setItem('user_first_name', mockUser.first_name);\n        localStorage.setItem('user_last_name', mockUser.last_name);\n        localStorage.setItem('user_email', mockUser.email);\n        localStorage.setItem('user_role', isAdmin ? 'admin' : 'user');\n        \n        dispatch({ type: 'LOGIN_SUCCESS', payload: mockUser });\n      } else {\n        throw new Error('Usuário e senha são obrigatórios');\n      }\n    } catch (error: any) {\n      const errorMessage = error.message || 'Erro ao fazer login. Verifique suas credenciais.';\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      throw error;\n    }\n  };\n\n  const register = async (userData: RegisterRequest) => {\n    dispatch({ type: 'SET_LOADING', payload: { isLoading: true } });\n\n    try {\n      // Modo demo - criar conta com dados fornecidos\n      if (userData.username && userData.email && userData.password && userData.first_name && userData.last_name) {\n        // Simular dados de resposta\n        const mockUser: User = {\n          id: Math.floor(Math.random() * 1000) + 1,\n          username: userData.username,\n          email: userData.email,\n          first_name: userData.first_name,\n          last_name: userData.last_name,\n          is_verified: false,\n          created_at: new Date().toISOString(),\n          profile: {\n            id: 1,\n            bio: `Estudante de Direito - ${userData.first_name} ${userData.last_name}`,\n            date_of_birth: null,\n            phone_number: '',\n            preferred_study_time: 'evening',\n            target_exam: 'OAB',\n            experience_level: 'beginner',\n            study_goals: 'Passar na OAB',\n            xp_points: 0,\n            coins: 100,\n            current_streak: 0,\n            best_streak: 0,\n            total_study_time: 0,\n            avatar: null,\n          }\n        };\n        \n        // Salvar token demo no localStorage\n        localStorage.setItem('access_token', 'demo_token_' + Date.now());\n        localStorage.setItem('refresh_token', 'demo_refresh_' + Date.now());\n        localStorage.setItem('user_username', mockUser.username);\n        localStorage.setItem('user_first_name', mockUser.first_name);\n        localStorage.setItem('user_last_name', mockUser.last_name);\n        localStorage.setItem('user_email', mockUser.email);\n        localStorage.setItem('user_role', 'user');\n        \n        dispatch({ type: 'LOGIN_SUCCESS', payload: mockUser });\n      } else {\n        throw new Error('Todos os campos são obrigatórios');\n      }\n    } catch (error: any) {\n      const errorMessage = error.message || 'Erro ao criar conta. Tente novamente.';\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    dispatch({ type: 'SET_LOADING', payload: { isLoading: true } });\n\n    try {\n      // Em produção, chamar a API de logout aqui\n      // await apiService.logout();\n    } catch (error) {\n      console.error('Erro ao fazer logout:', error);\n    } finally {\n      dispatch({ type: 'LOGOUT' });\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      localStorage.removeItem('user_username');\n      localStorage.removeItem('user_first_name');\n      localStorage.removeItem('user_last_name');\n      localStorage.removeItem('user_email');\n      localStorage.removeItem('user_role');\n    }\n  };\n\n  const updateUser = (userData: Partial<User>) => {\n    dispatch({ type: 'UPDATE_USER', payload: userData });\n  };\n\n  const contextValue: AuthContextType = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateUser,\n    checkAuth,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Hook personalizado para usar o contexto\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  \n  if (context === undefined) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  \n  return context;\n};\n\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}