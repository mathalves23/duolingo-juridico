{"ast":null,"code":"import React,{createContext,useContext}from'react';import NotificationSystem,{useNotifications}from'../components/NotificationSystem';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NotificationContext=/*#__PURE__*/createContext(undefined);export const NotificationProvider=_ref=>{let{children}=_ref;const{notifications,removeNotification,success,error,warning,info,clearAll}=useNotifications();return/*#__PURE__*/_jsxs(NotificationContext.Provider,{value:{success,error,warning,info,clearAll},children:[children,/*#__PURE__*/_jsx(NotificationSystem,{notifications:notifications,onRemove:removeNotification,position:\"top-right\",maxVisible:5})]});};export const useNotification=()=>{const context=useContext(NotificationContext);if(!context){throw new Error('useNotification deve ser usado dentro de um NotificationProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","NotificationSystem","useNotifications","jsx","_jsx","jsxs","_jsxs","NotificationContext","undefined","NotificationProvider","_ref","children","notifications","removeNotification","success","error","warning","info","clearAll","Provider","value","onRemove","position","maxVisible","useNotification","context","Error"],"sources":["/Users/mdearaujo/Documents/Projetos/git/duolingo-juridico/frontend/src/contexts/NotificationContext.tsx"],"sourcesContent":["import React, { createContext, useContext, ReactNode } from 'react';\nimport NotificationSystem, { useNotifications } from '../components/NotificationSystem';\n\ninterface NotificationContextType {\n  success: (title: string, message: string, actions?: any[]) => void;\n  error: (title: string, message: string, actions?: any[]) => void;\n  warning: (title: string, message: string, actions?: any[]) => void;\n  info: (title: string, message: string, actions?: any[]) => void;\n  clearAll: () => void;\n}\n\nconst NotificationContext = createContext<NotificationContextType | undefined>(undefined);\n\ninterface NotificationProviderProps {\n  children: ReactNode;\n}\n\nexport const NotificationProvider: React.FC<NotificationProviderProps> = ({ children }) => {\n  const { notifications, removeNotification, success, error, warning, info, clearAll } = useNotifications();\n\n  return (\n    <NotificationContext.Provider value={{ success, error, warning, info, clearAll }}>\n      {children}\n      <NotificationSystem\n        notifications={notifications}\n        onRemove={removeNotification}\n        position=\"top-right\"\n        maxVisible={5}\n      />\n    </NotificationContext.Provider>\n  );\n};\n\nexport const useNotification = (): NotificationContextType => {\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotification deve ser usado dentro de um NotificationProvider');\n  }\n  return context;\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,KAAmB,OAAO,CACnE,MAAO,CAAAC,kBAAkB,EAAIC,gBAAgB,KAAQ,kCAAkC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAUxF,KAAM,CAAAC,mBAAmB,cAAGR,aAAa,CAAsCS,SAAS,CAAC,CAMzF,MAAO,MAAM,CAAAC,oBAAyD,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACpF,KAAM,CAAEE,aAAa,CAAEC,kBAAkB,CAAEC,OAAO,CAAEC,KAAK,CAAEC,OAAO,CAAEC,IAAI,CAAEC,QAAS,CAAC,CAAGhB,gBAAgB,CAAC,CAAC,CAEzG,mBACEI,KAAA,CAACC,mBAAmB,CAACY,QAAQ,EAACC,KAAK,CAAE,CAAEN,OAAO,CAAEC,KAAK,CAAEC,OAAO,CAAEC,IAAI,CAAEC,QAAS,CAAE,CAAAP,QAAA,EAC9EA,QAAQ,cACTP,IAAA,CAACH,kBAAkB,EACjBW,aAAa,CAAEA,aAAc,CAC7BS,QAAQ,CAAER,kBAAmB,CAC7BS,QAAQ,CAAC,WAAW,CACpBC,UAAU,CAAE,CAAE,CACf,CAAC,EAC0B,CAAC,CAEnC,CAAC,CAED,MAAO,MAAM,CAAAC,eAAe,CAAGA,CAAA,GAA+B,CAC5D,KAAM,CAAAC,OAAO,CAAGzB,UAAU,CAACO,mBAAmB,CAAC,CAC/C,GAAI,CAACkB,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,kEAAkE,CAAC,CACrF,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}